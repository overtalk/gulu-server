// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pvp.proto

package gamepb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 玩法类型
type PlayType int32

const (
	PlayType_Time  PlayType = 0
	PlayType_Round PlayType = 1
	PlayType_Race  PlayType = 4
)

var PlayType_name = map[int32]string{
	0: "Time",
	1: "Round",
	4: "Race",
}

var PlayType_value = map[string]int32{
	"Time":  0,
	"Round": 1,
	"Race":  4,
}

func (x PlayType) String() string {
	return proto.EnumName(PlayType_name, int32(x))
}

func (PlayType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{0}
}

// 靶子类型
type TargetType int32

const (
	TargetType_Standard      TargetType = 0
	TargetType_Unicorn       TargetType = 1
	TargetType_Animal        TargetType = 2
	TargetType_Holder        TargetType = 3
	TargetType_Competitive   TargetType = 4
	TargetType_Seesaw        TargetType = 5
	TargetType_Human         TargetType = 6
	TargetType_Hostage       TargetType = 7
	TargetType_BabyDoll      TargetType = 8
	TargetType_Crossbar      TargetType = 9
	TargetType_Sausage       TargetType = 10
	TargetType_Aircraft      TargetType = 11
	TargetType_LittleZombie  TargetType = 12
	TargetType_GiantZombie   TargetType = 13
	TargetType_BalloonZombie TargetType = 14
)

var TargetType_name = map[int32]string{
	0:  "Standard",
	1:  "Unicorn",
	2:  "Animal",
	3:  "Holder",
	4:  "Competitive",
	5:  "Seesaw",
	6:  "Human",
	7:  "Hostage",
	8:  "BabyDoll",
	9:  "Crossbar",
	10: "Sausage",
	11: "Aircraft",
	12: "LittleZombie",
	13: "GiantZombie",
	14: "BalloonZombie",
}

var TargetType_value = map[string]int32{
	"Standard":      0,
	"Unicorn":       1,
	"Animal":        2,
	"Holder":        3,
	"Competitive":   4,
	"Seesaw":        5,
	"Human":         6,
	"Hostage":       7,
	"BabyDoll":      8,
	"Crossbar":      9,
	"Sausage":       10,
	"Aircraft":      11,
	"LittleZombie":  12,
	"GiantZombie":   13,
	"BalloonZombie": 14,
}

func (x TargetType) String() string {
	return proto.EnumName(TargetType_name, int32(x))
}

func (TargetType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{1}
}

type ShootTurn int32

const (
	ShootTurn_both    ShootTurn = 0
	ShootTurn_player1 ShootTurn = 1
	ShootTurn_player2 ShootTurn = 2
	ShootTurn_neither ShootTurn = 3
)

var ShootTurn_name = map[int32]string{
	0: "both",
	1: "player1",
	2: "player2",
	3: "neither",
}

var ShootTurn_value = map[string]int32{
	"both":    0,
	"player1": 1,
	"player2": 2,
	"neither": 3,
}

func (x ShootTurn) String() string {
	return proto.EnumName(ShootTurn_name, int32(x))
}

func (ShootTurn) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{2}
}

type PvpShootResp_OppStatus int32

const (
	PvpShootResp_online    PvpShootResp_OppStatus = 0
	PvpShootResp_reconnect PvpShootResp_OppStatus = 1
	PvpShootResp_surrender PvpShootResp_OppStatus = 2
)

var PvpShootResp_OppStatus_name = map[int32]string{
	0: "online",
	1: "reconnect",
	2: "surrender",
}

var PvpShootResp_OppStatus_value = map[string]int32{
	"online":    0,
	"reconnect": 1,
	"surrender": 2,
}

func (x PvpShootResp_OppStatus) String() string {
	return proto.EnumName(PvpShootResp_OppStatus_name, int32(x))
}

func (PvpShootResp_OppStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{11, 0}
}

type PvpBattleReport_Winner int32

const (
	PvpBattleReport_onMatch PvpBattleReport_Winner = 0
	PvpBattleReport_player1 PvpBattleReport_Winner = 1
	PvpBattleReport_player2 PvpBattleReport_Winner = 2
)

var PvpBattleReport_Winner_name = map[int32]string{
	0: "onMatch",
	1: "player1",
	2: "player2",
}

var PvpBattleReport_Winner_value = map[string]int32{
	"onMatch": 0,
	"player1": 1,
	"player2": 2,
}

func (x PvpBattleReport_Winner) String() string {
	return proto.EnumName(PvpBattleReport_Winner_name, int32(x))
}

func (PvpBattleReport_Winner) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{18, 0}
}

type PvpBattleStatus_Type int32

const (
	PvpBattleStatus_shoot          PvpBattleStatus_Type = 0
	PvpBattleStatus_turnChange     PvpBattleStatus_Type = 1
	PvpBattleStatus_roundOver      PvpBattleStatus_Type = 2
	PvpBattleStatus_ot             PvpBattleStatus_Type = 3
	PvpBattleStatus_oppOffLine     PvpBattleStatus_Type = 4
	PvpBattleStatus_gameOver       PvpBattleStatus_Type = 5
	PvpBattleStatus_surrender      PvpBattleStatus_Type = 6
	PvpBattleStatus_stopGame       PvpBattleStatus_Type = 7
	PvpBattleStatus_startGame      PvpBattleStatus_Type = 8
	PvpBattleStatus_clientAbnormal PvpBattleStatus_Type = 9
	PvpBattleStatus_gameTimeout    PvpBattleStatus_Type = 10
	PvpBattleStatus_reconnect      PvpBattleStatus_Type = 11
	PvpBattleStatus_emotion        PvpBattleStatus_Type = 12
	PvpBattleStatus_oppReconnect   PvpBattleStatus_Type = 13
)

var PvpBattleStatus_Type_name = map[int32]string{
	0:  "shoot",
	1:  "turnChange",
	2:  "roundOver",
	3:  "ot",
	4:  "oppOffLine",
	5:  "gameOver",
	6:  "surrender",
	7:  "stopGame",
	8:  "startGame",
	9:  "clientAbnormal",
	10: "gameTimeout",
	11: "reconnect",
	12: "emotion",
	13: "oppReconnect",
}

var PvpBattleStatus_Type_value = map[string]int32{
	"shoot":          0,
	"turnChange":     1,
	"roundOver":      2,
	"ot":             3,
	"oppOffLine":     4,
	"gameOver":       5,
	"surrender":      6,
	"stopGame":       7,
	"startGame":      8,
	"clientAbnormal": 9,
	"gameTimeout":    10,
	"reconnect":      11,
	"emotion":        12,
	"oppReconnect":   13,
}

func (x PvpBattleStatus_Type) String() string {
	return proto.EnumName(PvpBattleStatus_Type_name, int32(x))
}

func (PvpBattleStatus_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{19, 0}
}

// LastPvpReq is to check last pvp
type LastPvpReq struct {
	PlayerID             string   `protobuf:"bytes,1,opt,name=playerID,proto3" json:"playerID,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	RoomID               string   `protobuf:"bytes,3,opt,name=roomID,proto3" json:"roomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LastPvpReq) Reset()         { *m = LastPvpReq{} }
func (m *LastPvpReq) String() string { return proto.CompactTextString(m) }
func (*LastPvpReq) ProtoMessage()    {}
func (*LastPvpReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{0}
}

func (m *LastPvpReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastPvpReq.Unmarshal(m, b)
}
func (m *LastPvpReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastPvpReq.Marshal(b, m, deterministic)
}
func (m *LastPvpReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastPvpReq.Merge(m, src)
}
func (m *LastPvpReq) XXX_Size() int {
	return xxx_messageInfo_LastPvpReq.Size(m)
}
func (m *LastPvpReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LastPvpReq.DiscardUnknown(m)
}

var xxx_messageInfo_LastPvpReq proto.InternalMessageInfo

func (m *LastPvpReq) GetPlayerID() string {
	if m != nil {
		return m.PlayerID
	}
	return ""
}

func (m *LastPvpReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LastPvpReq) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

type LastPvpResp struct {
	Result               Result           `protobuf:"varint,1,opt,name=result,proto3,enum=Msg.Result" json:"result,omitempty"`
	RoomID               string           `protobuf:"bytes,2,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Player1              *PlayerAttribute `protobuf:"bytes,3,opt,name=player1,proto3" json:"player1,omitempty"`
	Player2              *PlayerAttribute `protobuf:"bytes,4,opt,name=player2,proto3" json:"player2,omitempty"`
	Pvp                  *PvpBattle       `protobuf:"bytes,5,opt,name=pvp,proto3" json:"pvp,omitempty"`
	LastShootIndex       int64            `protobuf:"varint,7,opt,name=LastShootIndex,proto3" json:"LastShootIndex,omitempty"`
	IsSnapshotMatched    bool             `protobuf:"varint,10,opt,name=isSnapshotMatched,proto3" json:"isSnapshotMatched,omitempty"`
	PvfRoomID            string           `protobuf:"bytes,11,opt,name=pvfRoomID,proto3" json:"pvfRoomID,omitempty"`
	SnapshotInfo         *PvpSnapshotInfo `protobuf:"bytes,12,opt,name=snapshotInfo,proto3" json:"snapshotInfo,omitempty"`
	OtSnapshotInfo       *PvpSnapshotInfo `protobuf:"bytes,13,opt,name=otSnapshotInfo,proto3" json:"otSnapshotInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LastPvpResp) Reset()         { *m = LastPvpResp{} }
func (m *LastPvpResp) String() string { return proto.CompactTextString(m) }
func (*LastPvpResp) ProtoMessage()    {}
func (*LastPvpResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{1}
}

func (m *LastPvpResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastPvpResp.Unmarshal(m, b)
}
func (m *LastPvpResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastPvpResp.Marshal(b, m, deterministic)
}
func (m *LastPvpResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastPvpResp.Merge(m, src)
}
func (m *LastPvpResp) XXX_Size() int {
	return xxx_messageInfo_LastPvpResp.Size(m)
}
func (m *LastPvpResp) XXX_DiscardUnknown() {
	xxx_messageInfo_LastPvpResp.DiscardUnknown(m)
}

var xxx_messageInfo_LastPvpResp proto.InternalMessageInfo

func (m *LastPvpResp) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_INTERNAL
}

func (m *LastPvpResp) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *LastPvpResp) GetPlayer1() *PlayerAttribute {
	if m != nil {
		return m.Player1
	}
	return nil
}

func (m *LastPvpResp) GetPlayer2() *PlayerAttribute {
	if m != nil {
		return m.Player2
	}
	return nil
}

func (m *LastPvpResp) GetPvp() *PvpBattle {
	if m != nil {
		return m.Pvp
	}
	return nil
}

func (m *LastPvpResp) GetLastShootIndex() int64 {
	if m != nil {
		return m.LastShootIndex
	}
	return 0
}

func (m *LastPvpResp) GetIsSnapshotMatched() bool {
	if m != nil {
		return m.IsSnapshotMatched
	}
	return false
}

func (m *LastPvpResp) GetPvfRoomID() string {
	if m != nil {
		return m.PvfRoomID
	}
	return ""
}

func (m *LastPvpResp) GetSnapshotInfo() *PvpSnapshotInfo {
	if m != nil {
		return m.SnapshotInfo
	}
	return nil
}

func (m *LastPvpResp) GetOtSnapshotInfo() *PvpSnapshotInfo {
	if m != nil {
		return m.OtSnapshotInfo
	}
	return nil
}

// PvpOnMatched is used to get result of pvp match
type PvpBattle struct {
	Type                 PlayType         `protobuf:"varint,1,opt,name=type,proto3,enum=Msg.PlayType" json:"type,omitempty"`
	Limit                *PvpBattle_Limit `protobuf:"bytes,2,opt,name=limit,proto3" json:"limit,omitempty"`
	StageID              string           `protobuf:"bytes,3,opt,name=stageID,proto3" json:"stageID,omitempty"`
	Rand                 []int64          `protobuf:"varint,4,rep,packed,name=rand,proto3" json:"rand,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PvpBattle) Reset()         { *m = PvpBattle{} }
func (m *PvpBattle) String() string { return proto.CompactTextString(m) }
func (*PvpBattle) ProtoMessage()    {}
func (*PvpBattle) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{2}
}

func (m *PvpBattle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpBattle.Unmarshal(m, b)
}
func (m *PvpBattle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpBattle.Marshal(b, m, deterministic)
}
func (m *PvpBattle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpBattle.Merge(m, src)
}
func (m *PvpBattle) XXX_Size() int {
	return xxx_messageInfo_PvpBattle.Size(m)
}
func (m *PvpBattle) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpBattle.DiscardUnknown(m)
}

var xxx_messageInfo_PvpBattle proto.InternalMessageInfo

func (m *PvpBattle) GetType() PlayType {
	if m != nil {
		return m.Type
	}
	return PlayType_Time
}

func (m *PvpBattle) GetLimit() *PvpBattle_Limit {
	if m != nil {
		return m.Limit
	}
	return nil
}

func (m *PvpBattle) GetStageID() string {
	if m != nil {
		return m.StageID
	}
	return ""
}

func (m *PvpBattle) GetRand() []int64 {
	if m != nil {
		return m.Rand
	}
	return nil
}

type PvpBattle_Limit struct {
	Round                int64    `protobuf:"varint,1,opt,name=round,proto3" json:"round,omitempty"`
	Time                 int64    `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Score                []int64  `protobuf:"varint,3,rep,packed,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PvpBattle_Limit) Reset()         { *m = PvpBattle_Limit{} }
func (m *PvpBattle_Limit) String() string { return proto.CompactTextString(m) }
func (*PvpBattle_Limit) ProtoMessage()    {}
func (*PvpBattle_Limit) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{2, 0}
}

func (m *PvpBattle_Limit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpBattle_Limit.Unmarshal(m, b)
}
func (m *PvpBattle_Limit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpBattle_Limit.Marshal(b, m, deterministic)
}
func (m *PvpBattle_Limit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpBattle_Limit.Merge(m, src)
}
func (m *PvpBattle_Limit) XXX_Size() int {
	return xxx_messageInfo_PvpBattle_Limit.Size(m)
}
func (m *PvpBattle_Limit) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpBattle_Limit.DiscardUnknown(m)
}

var xxx_messageInfo_PvpBattle_Limit proto.InternalMessageInfo

func (m *PvpBattle_Limit) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *PvpBattle_Limit) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *PvpBattle_Limit) GetScore() []int64 {
	if m != nil {
		return m.Score
	}
	return nil
}

// Shoot means a shoot of player
type Shoot struct {
	// detail record the player operations of per shoot
	Index                int64            `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Score                float32          `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
	IsLastFrame          bool             `protobuf:"varint,4,opt,name=isLastFrame,proto3" json:"isLastFrame,omitempty"`
	Data                 string           `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Collection           *ShootCollection `protobuf:"bytes,5,opt,name=collection,proto3" json:"collection,omitempty"`
	IsOverTime           bool             `protobuf:"varint,6,opt,name=isOverTime,proto3" json:"isOverTime,omitempty"`
	EmotionID            int32            `protobuf:"varint,7,opt,name=emotionID,proto3" json:"emotionID,omitempty"`
	IsOpenScopeFrame     bool             `protobuf:"varint,8,opt,name=isOpenScopeFrame,proto3" json:"isOpenScopeFrame,omitempty"`
	UsedTime             int64            `protobuf:"varint,9,opt,name=usedTime,proto3" json:"usedTime,omitempty"`
	PunitiveTime         int64            `protobuf:"varint,10,opt,name=punitiveTime,proto3" json:"punitiveTime,omitempty"`
	FrameRate            int32            `protobuf:"varint,11,opt,name=frameRate,proto3" json:"frameRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Shoot) Reset()         { *m = Shoot{} }
func (m *Shoot) String() string { return proto.CompactTextString(m) }
func (*Shoot) ProtoMessage()    {}
func (*Shoot) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{3}
}

func (m *Shoot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shoot.Unmarshal(m, b)
}
func (m *Shoot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shoot.Marshal(b, m, deterministic)
}
func (m *Shoot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shoot.Merge(m, src)
}
func (m *Shoot) XXX_Size() int {
	return xxx_messageInfo_Shoot.Size(m)
}
func (m *Shoot) XXX_DiscardUnknown() {
	xxx_messageInfo_Shoot.DiscardUnknown(m)
}

var xxx_messageInfo_Shoot proto.InternalMessageInfo

func (m *Shoot) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Shoot) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *Shoot) GetIsLastFrame() bool {
	if m != nil {
		return m.IsLastFrame
	}
	return false
}

func (m *Shoot) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Shoot) GetCollection() *ShootCollection {
	if m != nil {
		return m.Collection
	}
	return nil
}

func (m *Shoot) GetIsOverTime() bool {
	if m != nil {
		return m.IsOverTime
	}
	return false
}

func (m *Shoot) GetEmotionID() int32 {
	if m != nil {
		return m.EmotionID
	}
	return 0
}

func (m *Shoot) GetIsOpenScopeFrame() bool {
	if m != nil {
		return m.IsOpenScopeFrame
	}
	return false
}

func (m *Shoot) GetUsedTime() int64 {
	if m != nil {
		return m.UsedTime
	}
	return 0
}

func (m *Shoot) GetPunitiveTime() int64 {
	if m != nil {
		return m.PunitiveTime
	}
	return 0
}

func (m *Shoot) GetFrameRate() int32 {
	if m != nil {
		return m.FrameRate
	}
	return 0
}

// PvpStartReq & PvpStartResp is used to start pvp game
type PvpStartReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Arena                int64    `protobuf:"varint,2,opt,name=arena,proto3" json:"arena,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PvpStartReq) Reset()         { *m = PvpStartReq{} }
func (m *PvpStartReq) String() string { return proto.CompactTextString(m) }
func (*PvpStartReq) ProtoMessage()    {}
func (*PvpStartReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{4}
}

func (m *PvpStartReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpStartReq.Unmarshal(m, b)
}
func (m *PvpStartReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpStartReq.Marshal(b, m, deterministic)
}
func (m *PvpStartReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpStartReq.Merge(m, src)
}
func (m *PvpStartReq) XXX_Size() int {
	return xxx_messageInfo_PvpStartReq.Size(m)
}
func (m *PvpStartReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpStartReq.DiscardUnknown(m)
}

var xxx_messageInfo_PvpStartReq proto.InternalMessageInfo

func (m *PvpStartReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *PvpStartReq) GetArena() int64 {
	if m != nil {
		return m.Arena
	}
	return 0
}

type PvpStartResp struct {
	Result               Result   `protobuf:"varint,1,opt,name=result,proto3,enum=Msg.Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PvpStartResp) Reset()         { *m = PvpStartResp{} }
func (m *PvpStartResp) String() string { return proto.CompactTextString(m) }
func (*PvpStartResp) ProtoMessage()    {}
func (*PvpStartResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{5}
}

func (m *PvpStartResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpStartResp.Unmarshal(m, b)
}
func (m *PvpStartResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpStartResp.Marshal(b, m, deterministic)
}
func (m *PvpStartResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpStartResp.Merge(m, src)
}
func (m *PvpStartResp) XXX_Size() int {
	return xxx_messageInfo_PvpStartResp.Size(m)
}
func (m *PvpStartResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpStartResp.DiscardUnknown(m)
}

var xxx_messageInfo_PvpStartResp proto.InternalMessageInfo

func (m *PvpStartResp) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_INTERNAL
}

// PvpStopMatchReq & PvpStopMatchReq is to stop match
type PvpStopMatchReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PvpStopMatchReq) Reset()         { *m = PvpStopMatchReq{} }
func (m *PvpStopMatchReq) String() string { return proto.CompactTextString(m) }
func (*PvpStopMatchReq) ProtoMessage()    {}
func (*PvpStopMatchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{6}
}

func (m *PvpStopMatchReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpStopMatchReq.Unmarshal(m, b)
}
func (m *PvpStopMatchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpStopMatchReq.Marshal(b, m, deterministic)
}
func (m *PvpStopMatchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpStopMatchReq.Merge(m, src)
}
func (m *PvpStopMatchReq) XXX_Size() int {
	return xxx_messageInfo_PvpStopMatchReq.Size(m)
}
func (m *PvpStopMatchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpStopMatchReq.DiscardUnknown(m)
}

var xxx_messageInfo_PvpStopMatchReq proto.InternalMessageInfo

func (m *PvpStopMatchReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type PvpStopMatchResp struct {
	Result               Result   `protobuf:"varint,1,opt,name=result,proto3,enum=Msg.Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PvpStopMatchResp) Reset()         { *m = PvpStopMatchResp{} }
func (m *PvpStopMatchResp) String() string { return proto.CompactTextString(m) }
func (*PvpStopMatchResp) ProtoMessage()    {}
func (*PvpStopMatchResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{7}
}

func (m *PvpStopMatchResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpStopMatchResp.Unmarshal(m, b)
}
func (m *PvpStopMatchResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpStopMatchResp.Marshal(b, m, deterministic)
}
func (m *PvpStopMatchResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpStopMatchResp.Merge(m, src)
}
func (m *PvpStopMatchResp) XXX_Size() int {
	return xxx_messageInfo_PvpStopMatchResp.Size(m)
}
func (m *PvpStopMatchResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpStopMatchResp.DiscardUnknown(m)
}

var xxx_messageInfo_PvpStopMatchResp proto.InternalMessageInfo

func (m *PvpStopMatchResp) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_INTERNAL
}

// PvpEnterRoomReq & PvpEnterRoomResp is used to enter pvp room
type PvpEnterRoomReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	PlayerID             string   `protobuf:"bytes,2,opt,name=playerID,proto3" json:"playerID,omitempty"`
	RoomID               string   `protobuf:"bytes,3,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PvpEnterRoomReq) Reset()         { *m = PvpEnterRoomReq{} }
func (m *PvpEnterRoomReq) String() string { return proto.CompactTextString(m) }
func (*PvpEnterRoomReq) ProtoMessage()    {}
func (*PvpEnterRoomReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{8}
}

func (m *PvpEnterRoomReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpEnterRoomReq.Unmarshal(m, b)
}
func (m *PvpEnterRoomReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpEnterRoomReq.Marshal(b, m, deterministic)
}
func (m *PvpEnterRoomReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpEnterRoomReq.Merge(m, src)
}
func (m *PvpEnterRoomReq) XXX_Size() int {
	return xxx_messageInfo_PvpEnterRoomReq.Size(m)
}
func (m *PvpEnterRoomReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpEnterRoomReq.DiscardUnknown(m)
}

var xxx_messageInfo_PvpEnterRoomReq proto.InternalMessageInfo

func (m *PvpEnterRoomReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *PvpEnterRoomReq) GetPlayerID() string {
	if m != nil {
		return m.PlayerID
	}
	return ""
}

func (m *PvpEnterRoomReq) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

type PvpEnterRoomResp struct {
	Result               Result   `protobuf:"varint,1,opt,name=result,proto3,enum=Msg.Result" json:"result,omitempty"`
	TimeStamp            int64    `protobuf:"varint,2,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PvpEnterRoomResp) Reset()         { *m = PvpEnterRoomResp{} }
func (m *PvpEnterRoomResp) String() string { return proto.CompactTextString(m) }
func (*PvpEnterRoomResp) ProtoMessage()    {}
func (*PvpEnterRoomResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{9}
}

func (m *PvpEnterRoomResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpEnterRoomResp.Unmarshal(m, b)
}
func (m *PvpEnterRoomResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpEnterRoomResp.Marshal(b, m, deterministic)
}
func (m *PvpEnterRoomResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpEnterRoomResp.Merge(m, src)
}
func (m *PvpEnterRoomResp) XXX_Size() int {
	return xxx_messageInfo_PvpEnterRoomResp.Size(m)
}
func (m *PvpEnterRoomResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpEnterRoomResp.DiscardUnknown(m)
}

var xxx_messageInfo_PvpEnterRoomResp proto.InternalMessageInfo

func (m *PvpEnterRoomResp) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_INTERNAL
}

func (m *PvpEnterRoomResp) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

// PvpShootReq & PvpShootResp is used to send shoot operation to server
type PvpShootReq struct {
	RoomID               string   `protobuf:"bytes,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	PlayerID             string   `protobuf:"bytes,2,opt,name=playerID,proto3" json:"playerID,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Shoots               []*Shoot `protobuf:"bytes,4,rep,name=shoots,proto3" json:"shoots,omitempty"`
	TurnNum              int32    `protobuf:"varint,5,opt,name=turnNum,proto3" json:"turnNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PvpShootReq) Reset()         { *m = PvpShootReq{} }
func (m *PvpShootReq) String() string { return proto.CompactTextString(m) }
func (*PvpShootReq) ProtoMessage()    {}
func (*PvpShootReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{10}
}

func (m *PvpShootReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpShootReq.Unmarshal(m, b)
}
func (m *PvpShootReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpShootReq.Marshal(b, m, deterministic)
}
func (m *PvpShootReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpShootReq.Merge(m, src)
}
func (m *PvpShootReq) XXX_Size() int {
	return xxx_messageInfo_PvpShootReq.Size(m)
}
func (m *PvpShootReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpShootReq.DiscardUnknown(m)
}

var xxx_messageInfo_PvpShootReq proto.InternalMessageInfo

func (m *PvpShootReq) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *PvpShootReq) GetPlayerID() string {
	if m != nil {
		return m.PlayerID
	}
	return ""
}

func (m *PvpShootReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *PvpShootReq) GetShoots() []*Shoot {
	if m != nil {
		return m.Shoots
	}
	return nil
}

func (m *PvpShootReq) GetTurnNum() int32 {
	if m != nil {
		return m.TurnNum
	}
	return 0
}

type PvpShootResp struct {
	Result               Result                 `protobuf:"varint,1,opt,name=result,proto3,enum=Msg.Result" json:"result,omitempty"`
	RecIndex             int64                  `protobuf:"varint,2,opt,name=recIndex,proto3" json:"recIndex,omitempty"`
	OppoStatus           PvpShootResp_OppStatus `protobuf:"varint,3,opt,name=oppoStatus,proto3,enum=Msg.PvpShootResp_OppStatus" json:"oppoStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PvpShootResp) Reset()         { *m = PvpShootResp{} }
func (m *PvpShootResp) String() string { return proto.CompactTextString(m) }
func (*PvpShootResp) ProtoMessage()    {}
func (*PvpShootResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{11}
}

func (m *PvpShootResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpShootResp.Unmarshal(m, b)
}
func (m *PvpShootResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpShootResp.Marshal(b, m, deterministic)
}
func (m *PvpShootResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpShootResp.Merge(m, src)
}
func (m *PvpShootResp) XXX_Size() int {
	return xxx_messageInfo_PvpShootResp.Size(m)
}
func (m *PvpShootResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpShootResp.DiscardUnknown(m)
}

var xxx_messageInfo_PvpShootResp proto.InternalMessageInfo

func (m *PvpShootResp) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_INTERNAL
}

func (m *PvpShootResp) GetRecIndex() int64 {
	if m != nil {
		return m.RecIndex
	}
	return 0
}

func (m *PvpShootResp) GetOppoStatus() PvpShootResp_OppStatus {
	if m != nil {
		return m.OppoStatus
	}
	return PvpShootResp_online
}

type PvpUsedTimeReq struct {
	RoomID               string   `protobuf:"bytes,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PvpUsedTimeReq) Reset()         { *m = PvpUsedTimeReq{} }
func (m *PvpUsedTimeReq) String() string { return proto.CompactTextString(m) }
func (*PvpUsedTimeReq) ProtoMessage()    {}
func (*PvpUsedTimeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{12}
}

func (m *PvpUsedTimeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpUsedTimeReq.Unmarshal(m, b)
}
func (m *PvpUsedTimeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpUsedTimeReq.Marshal(b, m, deterministic)
}
func (m *PvpUsedTimeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpUsedTimeReq.Merge(m, src)
}
func (m *PvpUsedTimeReq) XXX_Size() int {
	return xxx_messageInfo_PvpUsedTimeReq.Size(m)
}
func (m *PvpUsedTimeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpUsedTimeReq.DiscardUnknown(m)
}

var xxx_messageInfo_PvpUsedTimeReq proto.InternalMessageInfo

func (m *PvpUsedTimeReq) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *PvpUsedTimeReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type PvpUsedTimeResp struct {
	Result               Result   `protobuf:"varint,1,opt,name=result,proto3,enum=Msg.Result" json:"result,omitempty"`
	UsedTime             int64    `protobuf:"varint,2,opt,name=usedTime,proto3" json:"usedTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PvpUsedTimeResp) Reset()         { *m = PvpUsedTimeResp{} }
func (m *PvpUsedTimeResp) String() string { return proto.CompactTextString(m) }
func (*PvpUsedTimeResp) ProtoMessage()    {}
func (*PvpUsedTimeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{13}
}

func (m *PvpUsedTimeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpUsedTimeResp.Unmarshal(m, b)
}
func (m *PvpUsedTimeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpUsedTimeResp.Marshal(b, m, deterministic)
}
func (m *PvpUsedTimeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpUsedTimeResp.Merge(m, src)
}
func (m *PvpUsedTimeResp) XXX_Size() int {
	return xxx_messageInfo_PvpUsedTimeResp.Size(m)
}
func (m *PvpUsedTimeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpUsedTimeResp.DiscardUnknown(m)
}

var xxx_messageInfo_PvpUsedTimeResp proto.InternalMessageInfo

func (m *PvpUsedTimeResp) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_INTERNAL
}

func (m *PvpUsedTimeResp) GetUsedTime() int64 {
	if m != nil {
		return m.UsedTime
	}
	return 0
}

// PvpSurrenderReq & PvpSurrenderResp is used to handle the surrender of player
type PvpSurrenderReq struct {
	RoomID               string   `protobuf:"bytes,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	PlayerID             string   `protobuf:"bytes,2,opt,name=playerID,proto3" json:"playerID,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PvpSurrenderReq) Reset()         { *m = PvpSurrenderReq{} }
func (m *PvpSurrenderReq) String() string { return proto.CompactTextString(m) }
func (*PvpSurrenderReq) ProtoMessage()    {}
func (*PvpSurrenderReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{14}
}

func (m *PvpSurrenderReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpSurrenderReq.Unmarshal(m, b)
}
func (m *PvpSurrenderReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpSurrenderReq.Marshal(b, m, deterministic)
}
func (m *PvpSurrenderReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpSurrenderReq.Merge(m, src)
}
func (m *PvpSurrenderReq) XXX_Size() int {
	return xxx_messageInfo_PvpSurrenderReq.Size(m)
}
func (m *PvpSurrenderReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpSurrenderReq.DiscardUnknown(m)
}

var xxx_messageInfo_PvpSurrenderReq proto.InternalMessageInfo

func (m *PvpSurrenderReq) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *PvpSurrenderReq) GetPlayerID() string {
	if m != nil {
		return m.PlayerID
	}
	return ""
}

func (m *PvpSurrenderReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type PvpSurrenderResp struct {
	Result               Result   `protobuf:"varint,1,opt,name=result,proto3,enum=Msg.Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PvpSurrenderResp) Reset()         { *m = PvpSurrenderResp{} }
func (m *PvpSurrenderResp) String() string { return proto.CompactTextString(m) }
func (*PvpSurrenderResp) ProtoMessage()    {}
func (*PvpSurrenderResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{15}
}

func (m *PvpSurrenderResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpSurrenderResp.Unmarshal(m, b)
}
func (m *PvpSurrenderResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpSurrenderResp.Marshal(b, m, deterministic)
}
func (m *PvpSurrenderResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpSurrenderResp.Merge(m, src)
}
func (m *PvpSurrenderResp) XXX_Size() int {
	return xxx_messageInfo_PvpSurrenderResp.Size(m)
}
func (m *PvpSurrenderResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpSurrenderResp.DiscardUnknown(m)
}

var xxx_messageInfo_PvpSurrenderResp proto.InternalMessageInfo

func (m *PvpSurrenderResp) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_INTERNAL
}

type PvpSnapshotInfo struct {
	StageID              string   `protobuf:"bytes,1,opt,name=stageID,proto3" json:"stageID,omitempty"`
	PlayerID             string   `protobuf:"bytes,2,opt,name=playerID,proto3" json:"playerID,omitempty"`
	Time                 int64    `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	ScoreRange           string   `protobuf:"bytes,4,opt,name=scoreRange,proto3" json:"scoreRange,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PvpSnapshotInfo) Reset()         { *m = PvpSnapshotInfo{} }
func (m *PvpSnapshotInfo) String() string { return proto.CompactTextString(m) }
func (*PvpSnapshotInfo) ProtoMessage()    {}
func (*PvpSnapshotInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{16}
}

func (m *PvpSnapshotInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpSnapshotInfo.Unmarshal(m, b)
}
func (m *PvpSnapshotInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpSnapshotInfo.Marshal(b, m, deterministic)
}
func (m *PvpSnapshotInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpSnapshotInfo.Merge(m, src)
}
func (m *PvpSnapshotInfo) XXX_Size() int {
	return xxx_messageInfo_PvpSnapshotInfo.Size(m)
}
func (m *PvpSnapshotInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpSnapshotInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PvpSnapshotInfo proto.InternalMessageInfo

func (m *PvpSnapshotInfo) GetStageID() string {
	if m != nil {
		return m.StageID
	}
	return ""
}

func (m *PvpSnapshotInfo) GetPlayerID() string {
	if m != nil {
		return m.PlayerID
	}
	return ""
}

func (m *PvpSnapshotInfo) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *PvpSnapshotInfo) GetScoreRange() string {
	if m != nil {
		return m.ScoreRange
	}
	return ""
}

type PvpOnMatched struct {
	Result               Result           `protobuf:"varint,1,opt,name=result,proto3,enum=Msg.Result" json:"result,omitempty"`
	RoomID               string           `protobuf:"bytes,2,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Player1              *PlayerAttribute `protobuf:"bytes,3,opt,name=player1,proto3" json:"player1,omitempty"`
	Player2              *PlayerAttribute `protobuf:"bytes,4,opt,name=player2,proto3" json:"player2,omitempty"`
	Pvp                  *PvpBattle       `protobuf:"bytes,5,opt,name=pvp,proto3" json:"pvp,omitempty"`
	IsSnapshotMatched    bool             `protobuf:"varint,6,opt,name=isSnapshotMatched,proto3" json:"isSnapshotMatched,omitempty"`
	Target               TargetType       `protobuf:"varint,7,opt,name=target,proto3,enum=Msg.TargetType" json:"target,omitempty"`
	SnapshotInfo         *PvpSnapshotInfo `protobuf:"bytes,8,opt,name=snapshotInfo,proto3" json:"snapshotInfo,omitempty"`
	OtSnapshotInfo       *PvpSnapshotInfo `protobuf:"bytes,9,opt,name=otSnapshotInfo,proto3" json:"otSnapshotInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PvpOnMatched) Reset()         { *m = PvpOnMatched{} }
func (m *PvpOnMatched) String() string { return proto.CompactTextString(m) }
func (*PvpOnMatched) ProtoMessage()    {}
func (*PvpOnMatched) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{17}
}

func (m *PvpOnMatched) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpOnMatched.Unmarshal(m, b)
}
func (m *PvpOnMatched) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpOnMatched.Marshal(b, m, deterministic)
}
func (m *PvpOnMatched) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpOnMatched.Merge(m, src)
}
func (m *PvpOnMatched) XXX_Size() int {
	return xxx_messageInfo_PvpOnMatched.Size(m)
}
func (m *PvpOnMatched) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpOnMatched.DiscardUnknown(m)
}

var xxx_messageInfo_PvpOnMatched proto.InternalMessageInfo

func (m *PvpOnMatched) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_INTERNAL
}

func (m *PvpOnMatched) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *PvpOnMatched) GetPlayer1() *PlayerAttribute {
	if m != nil {
		return m.Player1
	}
	return nil
}

func (m *PvpOnMatched) GetPlayer2() *PlayerAttribute {
	if m != nil {
		return m.Player2
	}
	return nil
}

func (m *PvpOnMatched) GetPvp() *PvpBattle {
	if m != nil {
		return m.Pvp
	}
	return nil
}

func (m *PvpOnMatched) GetIsSnapshotMatched() bool {
	if m != nil {
		return m.IsSnapshotMatched
	}
	return false
}

func (m *PvpOnMatched) GetTarget() TargetType {
	if m != nil {
		return m.Target
	}
	return TargetType_Standard
}

func (m *PvpOnMatched) GetSnapshotInfo() *PvpSnapshotInfo {
	if m != nil {
		return m.SnapshotInfo
	}
	return nil
}

func (m *PvpOnMatched) GetOtSnapshotInfo() *PvpSnapshotInfo {
	if m != nil {
		return m.OtSnapshotInfo
	}
	return nil
}

// PvpBattleReport describes the result of pvp battle
type PvpBattleReport struct {
	Winner               PvpBattleReport_Winner `protobuf:"varint,1,opt,name=winner,proto3,enum=Msg.PvpBattleReport_Winner" json:"winner,omitempty"`
	Player1Cups          []int64                `protobuf:"varint,2,rep,packed,name=player1Cups,proto3" json:"player1Cups,omitempty"`
	Player2Cups          []int64                `protobuf:"varint,3,rep,packed,name=player2Cups,proto3" json:"player2Cups,omitempty"`
	Player1RoundScore    []float32              `protobuf:"fixed32,4,rep,packed,name=player1RoundScore,proto3" json:"player1RoundScore,omitempty"`
	Player2RoundScore    []float32              `protobuf:"fixed32,5,rep,packed,name=player2RoundScore,proto3" json:"player2RoundScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PvpBattleReport) Reset()         { *m = PvpBattleReport{} }
func (m *PvpBattleReport) String() string { return proto.CompactTextString(m) }
func (*PvpBattleReport) ProtoMessage()    {}
func (*PvpBattleReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{18}
}

func (m *PvpBattleReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpBattleReport.Unmarshal(m, b)
}
func (m *PvpBattleReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpBattleReport.Marshal(b, m, deterministic)
}
func (m *PvpBattleReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpBattleReport.Merge(m, src)
}
func (m *PvpBattleReport) XXX_Size() int {
	return xxx_messageInfo_PvpBattleReport.Size(m)
}
func (m *PvpBattleReport) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpBattleReport.DiscardUnknown(m)
}

var xxx_messageInfo_PvpBattleReport proto.InternalMessageInfo

func (m *PvpBattleReport) GetWinner() PvpBattleReport_Winner {
	if m != nil {
		return m.Winner
	}
	return PvpBattleReport_onMatch
}

func (m *PvpBattleReport) GetPlayer1Cups() []int64 {
	if m != nil {
		return m.Player1Cups
	}
	return nil
}

func (m *PvpBattleReport) GetPlayer2Cups() []int64 {
	if m != nil {
		return m.Player2Cups
	}
	return nil
}

func (m *PvpBattleReport) GetPlayer1RoundScore() []float32 {
	if m != nil {
		return m.Player1RoundScore
	}
	return nil
}

func (m *PvpBattleReport) GetPlayer2RoundScore() []float32 {
	if m != nil {
		return m.Player2RoundScore
	}
	return nil
}

type PvpBattleStatus struct {
	Result               Result               `protobuf:"varint,1,opt,name=result,proto3,enum=Msg.Result" json:"result,omitempty"`
	Index                int64                `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	BattleStatusType     PvpBattleStatus_Type `protobuf:"varint,3,opt,name=battleStatusType,proto3,enum=Msg.PvpBattleStatus_Type" json:"battleStatusType,omitempty"`
	Turn                 ShootTurn            `protobuf:"varint,4,opt,name=turn,proto3,enum=Msg.ShootTurn" json:"turn,omitempty"`
	Shoots               []*Shoot             `protobuf:"bytes,5,rep,name=shoots,proto3" json:"shoots,omitempty"`
	Report               *PvpBattleReport     `protobuf:"bytes,6,opt,name=report,proto3" json:"report,omitempty"`
	SnapshotOtScore      float32              `protobuf:"fixed32,8,opt,name=snapshotOtScore,proto3" json:"snapshotOtScore,omitempty"`
	RecoverShoot         *Shoot               `protobuf:"bytes,9,opt,name=recoverShoot,proto3" json:"recoverShoot,omitempty"`
	PlayerEmotion        *Emotion             `protobuf:"bytes,10,opt,name=playerEmotion,proto3" json:"playerEmotion,omitempty"`
	TurnNum              int32                `protobuf:"varint,11,opt,name=turnNum,proto3" json:"turnNum,omitempty"`
	IsGameOver           bool                 `protobuf:"varint,12,opt,name=isGameOver,proto3" json:"isGameOver,omitempty"`
	OppStatus            int32                `protobuf:"varint,13,opt,name=oppStatus,proto3" json:"oppStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PvpBattleStatus) Reset()         { *m = PvpBattleStatus{} }
func (m *PvpBattleStatus) String() string { return proto.CompactTextString(m) }
func (*PvpBattleStatus) ProtoMessage()    {}
func (*PvpBattleStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{19}
}

func (m *PvpBattleStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpBattleStatus.Unmarshal(m, b)
}
func (m *PvpBattleStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpBattleStatus.Marshal(b, m, deterministic)
}
func (m *PvpBattleStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpBattleStatus.Merge(m, src)
}
func (m *PvpBattleStatus) XXX_Size() int {
	return xxx_messageInfo_PvpBattleStatus.Size(m)
}
func (m *PvpBattleStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpBattleStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PvpBattleStatus proto.InternalMessageInfo

func (m *PvpBattleStatus) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_INTERNAL
}

func (m *PvpBattleStatus) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *PvpBattleStatus) GetBattleStatusType() PvpBattleStatus_Type {
	if m != nil {
		return m.BattleStatusType
	}
	return PvpBattleStatus_shoot
}

func (m *PvpBattleStatus) GetTurn() ShootTurn {
	if m != nil {
		return m.Turn
	}
	return ShootTurn_both
}

func (m *PvpBattleStatus) GetShoots() []*Shoot {
	if m != nil {
		return m.Shoots
	}
	return nil
}

func (m *PvpBattleStatus) GetReport() *PvpBattleReport {
	if m != nil {
		return m.Report
	}
	return nil
}

func (m *PvpBattleStatus) GetSnapshotOtScore() float32 {
	if m != nil {
		return m.SnapshotOtScore
	}
	return 0
}

func (m *PvpBattleStatus) GetRecoverShoot() *Shoot {
	if m != nil {
		return m.RecoverShoot
	}
	return nil
}

func (m *PvpBattleStatus) GetPlayerEmotion() *Emotion {
	if m != nil {
		return m.PlayerEmotion
	}
	return nil
}

func (m *PvpBattleStatus) GetTurnNum() int32 {
	if m != nil {
		return m.TurnNum
	}
	return 0
}

func (m *PvpBattleStatus) GetIsGameOver() bool {
	if m != nil {
		return m.IsGameOver
	}
	return false
}

func (m *PvpBattleStatus) GetOppStatus() int32 {
	if m != nil {
		return m.OppStatus
	}
	return 0
}

type Emotion struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	FromPlayer           int32    `protobuf:"varint,2,opt,name=fromPlayer,proto3" json:"fromPlayer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Emotion) Reset()         { *m = Emotion{} }
func (m *Emotion) String() string { return proto.CompactTextString(m) }
func (*Emotion) ProtoMessage()    {}
func (*Emotion) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{20}
}

func (m *Emotion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Emotion.Unmarshal(m, b)
}
func (m *Emotion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Emotion.Marshal(b, m, deterministic)
}
func (m *Emotion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Emotion.Merge(m, src)
}
func (m *Emotion) XXX_Size() int {
	return xxx_messageInfo_Emotion.Size(m)
}
func (m *Emotion) XXX_DiscardUnknown() {
	xxx_messageInfo_Emotion.DiscardUnknown(m)
}

var xxx_messageInfo_Emotion proto.InternalMessageInfo

func (m *Emotion) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Emotion) GetFromPlayer() int32 {
	if m != nil {
		return m.FromPlayer
	}
	return 0
}

type EmotionReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	PlayerID             string   `protobuf:"bytes,2,opt,name=playerID,proto3" json:"playerID,omitempty"`
	RoomID               string   `protobuf:"bytes,3,opt,name=roomID,proto3" json:"roomID,omitempty"`
	EmotionID            string   `protobuf:"bytes,4,opt,name=emotionID,proto3" json:"emotionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmotionReq) Reset()         { *m = EmotionReq{} }
func (m *EmotionReq) String() string { return proto.CompactTextString(m) }
func (*EmotionReq) ProtoMessage()    {}
func (*EmotionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{21}
}

func (m *EmotionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmotionReq.Unmarshal(m, b)
}
func (m *EmotionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmotionReq.Marshal(b, m, deterministic)
}
func (m *EmotionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmotionReq.Merge(m, src)
}
func (m *EmotionReq) XXX_Size() int {
	return xxx_messageInfo_EmotionReq.Size(m)
}
func (m *EmotionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EmotionReq.DiscardUnknown(m)
}

var xxx_messageInfo_EmotionReq proto.InternalMessageInfo

func (m *EmotionReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *EmotionReq) GetPlayerID() string {
	if m != nil {
		return m.PlayerID
	}
	return ""
}

func (m *EmotionReq) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *EmotionReq) GetEmotionID() string {
	if m != nil {
		return m.EmotionID
	}
	return ""
}

type EmotionResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmotionResp) Reset()         { *m = EmotionResp{} }
func (m *EmotionResp) String() string { return proto.CompactTextString(m) }
func (*EmotionResp) ProtoMessage()    {}
func (*EmotionResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{22}
}

func (m *EmotionResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmotionResp.Unmarshal(m, b)
}
func (m *EmotionResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmotionResp.Marshal(b, m, deterministic)
}
func (m *EmotionResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmotionResp.Merge(m, src)
}
func (m *EmotionResp) XXX_Size() int {
	return xxx_messageInfo_EmotionResp.Size(m)
}
func (m *EmotionResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EmotionResp.DiscardUnknown(m)
}

var xxx_messageInfo_EmotionResp proto.InternalMessageInfo

type BattleStatusACK struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	RoomID               string   `protobuf:"bytes,2,opt,name=roomID,proto3" json:"roomID,omitempty"`
	RecIndex             int64    `protobuf:"varint,3,opt,name=recIndex,proto3" json:"recIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BattleStatusACK) Reset()         { *m = BattleStatusACK{} }
func (m *BattleStatusACK) String() string { return proto.CompactTextString(m) }
func (*BattleStatusACK) ProtoMessage()    {}
func (*BattleStatusACK) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{23}
}

func (m *BattleStatusACK) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BattleStatusACK.Unmarshal(m, b)
}
func (m *BattleStatusACK) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BattleStatusACK.Marshal(b, m, deterministic)
}
func (m *BattleStatusACK) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BattleStatusACK.Merge(m, src)
}
func (m *BattleStatusACK) XXX_Size() int {
	return xxx_messageInfo_BattleStatusACK.Size(m)
}
func (m *BattleStatusACK) XXX_DiscardUnknown() {
	xxx_messageInfo_BattleStatusACK.DiscardUnknown(m)
}

var xxx_messageInfo_BattleStatusACK proto.InternalMessageInfo

func (m *BattleStatusACK) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *BattleStatusACK) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *BattleStatusACK) GetRecIndex() int64 {
	if m != nil {
		return m.RecIndex
	}
	return 0
}

// QuitRoomReq & QuitRoomResp
type QuitRoomReq struct {
	PlayerID             string   `protobuf:"bytes,1,opt,name=playerID,proto3" json:"playerID,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	RoomID               string   `protobuf:"bytes,3,opt,name=roomID,proto3" json:"roomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuitRoomReq) Reset()         { *m = QuitRoomReq{} }
func (m *QuitRoomReq) String() string { return proto.CompactTextString(m) }
func (*QuitRoomReq) ProtoMessage()    {}
func (*QuitRoomReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{24}
}

func (m *QuitRoomReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuitRoomReq.Unmarshal(m, b)
}
func (m *QuitRoomReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuitRoomReq.Marshal(b, m, deterministic)
}
func (m *QuitRoomReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuitRoomReq.Merge(m, src)
}
func (m *QuitRoomReq) XXX_Size() int {
	return xxx_messageInfo_QuitRoomReq.Size(m)
}
func (m *QuitRoomReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QuitRoomReq.DiscardUnknown(m)
}

var xxx_messageInfo_QuitRoomReq proto.InternalMessageInfo

func (m *QuitRoomReq) GetPlayerID() string {
	if m != nil {
		return m.PlayerID
	}
	return ""
}

func (m *QuitRoomReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *QuitRoomReq) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

type QuitRoomResp struct {
	Result               Result   `protobuf:"varint,1,opt,name=result,proto3,enum=Msg.Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuitRoomResp) Reset()         { *m = QuitRoomResp{} }
func (m *QuitRoomResp) String() string { return proto.CompactTextString(m) }
func (*QuitRoomResp) ProtoMessage()    {}
func (*QuitRoomResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{25}
}

func (m *QuitRoomResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuitRoomResp.Unmarshal(m, b)
}
func (m *QuitRoomResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuitRoomResp.Marshal(b, m, deterministic)
}
func (m *QuitRoomResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuitRoomResp.Merge(m, src)
}
func (m *QuitRoomResp) XXX_Size() int {
	return xxx_messageInfo_QuitRoomResp.Size(m)
}
func (m *QuitRoomResp) XXX_DiscardUnknown() {
	xxx_messageInfo_QuitRoomResp.DiscardUnknown(m)
}

var xxx_messageInfo_QuitRoomResp proto.InternalMessageInfo

func (m *QuitRoomResp) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_INTERNAL
}

// GetRewardReq
type GetRewardReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRewardReq) Reset()         { *m = GetRewardReq{} }
func (m *GetRewardReq) String() string { return proto.CompactTextString(m) }
func (*GetRewardReq) ProtoMessage()    {}
func (*GetRewardReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{26}
}

func (m *GetRewardReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRewardReq.Unmarshal(m, b)
}
func (m *GetRewardReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRewardReq.Marshal(b, m, deterministic)
}
func (m *GetRewardReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRewardReq.Merge(m, src)
}
func (m *GetRewardReq) XXX_Size() int {
	return xxx_messageInfo_GetRewardReq.Size(m)
}
func (m *GetRewardReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRewardReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetRewardReq proto.InternalMessageInfo

func (m *GetRewardReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// GetRewardResp
type GetRewardResp struct {
	Result               Result     `protobuf:"varint,1,opt,name=result,proto3,enum=Msg.Result" json:"result,omitempty"`
	CupChange            int64      `protobuf:"varint,2,opt,name=cupChange,proto3" json:"cupChange,omitempty"`
	OldCup               int64      `protobuf:"varint,3,opt,name=oldCup,proto3" json:"oldCup,omitempty"`
	NewCup               int64      `protobuf:"varint,4,opt,name=newCup,proto3" json:"newCup,omitempty"`
	OpponentChange       int64      `protobuf:"varint,5,opt,name=opponentChange,proto3" json:"opponentChange,omitempty"`
	OpponentCup          int64      `protobuf:"varint,6,opt,name=opponentCup,proto3" json:"opponentCup,omitempty"`
	OpponentNewCup       int64      `protobuf:"varint,7,opt,name=opponentNewCup,proto3" json:"opponentNewCup,omitempty"`
	Price                int64      `protobuf:"varint,8,opt,name=price,proto3" json:"price,omitempty"`
	Box                  []*BoxItem `protobuf:"bytes,9,rep,name=box,proto3" json:"box,omitempty"`
	WinningStreak        int64      `protobuf:"varint,10,opt,name=winningStreak,proto3" json:"winningStreak,omitempty"`
	ExtraBox             []*BoxItem `protobuf:"bytes,11,rep,name=extraBox,proto3" json:"extraBox,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetRewardResp) Reset()         { *m = GetRewardResp{} }
func (m *GetRewardResp) String() string { return proto.CompactTextString(m) }
func (*GetRewardResp) ProtoMessage()    {}
func (*GetRewardResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{27}
}

func (m *GetRewardResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRewardResp.Unmarshal(m, b)
}
func (m *GetRewardResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRewardResp.Marshal(b, m, deterministic)
}
func (m *GetRewardResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRewardResp.Merge(m, src)
}
func (m *GetRewardResp) XXX_Size() int {
	return xxx_messageInfo_GetRewardResp.Size(m)
}
func (m *GetRewardResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRewardResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetRewardResp proto.InternalMessageInfo

func (m *GetRewardResp) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_INTERNAL
}

func (m *GetRewardResp) GetCupChange() int64 {
	if m != nil {
		return m.CupChange
	}
	return 0
}

func (m *GetRewardResp) GetOldCup() int64 {
	if m != nil {
		return m.OldCup
	}
	return 0
}

func (m *GetRewardResp) GetNewCup() int64 {
	if m != nil {
		return m.NewCup
	}
	return 0
}

func (m *GetRewardResp) GetOpponentChange() int64 {
	if m != nil {
		return m.OpponentChange
	}
	return 0
}

func (m *GetRewardResp) GetOpponentCup() int64 {
	if m != nil {
		return m.OpponentCup
	}
	return 0
}

func (m *GetRewardResp) GetOpponentNewCup() int64 {
	if m != nil {
		return m.OpponentNewCup
	}
	return 0
}

func (m *GetRewardResp) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *GetRewardResp) GetBox() []*BoxItem {
	if m != nil {
		return m.Box
	}
	return nil
}

func (m *GetRewardResp) GetWinningStreak() int64 {
	if m != nil {
		return m.WinningStreak
	}
	return 0
}

func (m *GetRewardResp) GetExtraBox() []*BoxItem {
	if m != nil {
		return m.ExtraBox
	}
	return nil
}

type PvpAchievement struct {
	Level                int64    `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	Cup                  int64    `protobuf:"varint,2,opt,name=cup,proto3" json:"cup,omitempty"`
	Box                  *BoxItem `protobuf:"bytes,3,opt,name=box,proto3" json:"box,omitempty"`
	Receive              int64    `protobuf:"varint,4,opt,name=receive,proto3" json:"receive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PvpAchievement) Reset()         { *m = PvpAchievement{} }
func (m *PvpAchievement) String() string { return proto.CompactTextString(m) }
func (*PvpAchievement) ProtoMessage()    {}
func (*PvpAchievement) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{28}
}

func (m *PvpAchievement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpAchievement.Unmarshal(m, b)
}
func (m *PvpAchievement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpAchievement.Marshal(b, m, deterministic)
}
func (m *PvpAchievement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpAchievement.Merge(m, src)
}
func (m *PvpAchievement) XXX_Size() int {
	return xxx_messageInfo_PvpAchievement.Size(m)
}
func (m *PvpAchievement) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpAchievement.DiscardUnknown(m)
}

var xxx_messageInfo_PvpAchievement proto.InternalMessageInfo

func (m *PvpAchievement) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *PvpAchievement) GetCup() int64 {
	if m != nil {
		return m.Cup
	}
	return 0
}

func (m *PvpAchievement) GetBox() *BoxItem {
	if m != nil {
		return m.Box
	}
	return nil
}

func (m *PvpAchievement) GetReceive() int64 {
	if m != nil {
		return m.Receive
	}
	return 0
}

type PvpArena struct {
	Id                   int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PriceType            string            `protobuf:"bytes,10,opt,name=priceType,proto3" json:"priceType,omitempty"`
	Price                int64             `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	Limit                int64             `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Cup                  int64             `protobuf:"varint,4,opt,name=cup,proto3" json:"cup,omitempty"`
	Win                  int64             `protobuf:"varint,5,opt,name=win,proto3" json:"win,omitempty"`
	Loss                 int64             `protobuf:"varint,6,opt,name=loss,proto3" json:"loss,omitempty"`
	Lock                 bool              `protobuf:"varint,7,opt,name=lock,proto3" json:"lock,omitempty"`
	LockStar             int64             `protobuf:"varint,8,opt,name=lockStar,proto3" json:"lockStar,omitempty"`
	LockCup              int64             `protobuf:"varint,9,opt,name=lockCup,proto3" json:"lockCup,omitempty"`
	Achievement          []*PvpAchievement `protobuf:"bytes,11,rep,name=achievement,proto3" json:"achievement,omitempty"`
	RecommendEquipment   int64             `protobuf:"varint,12,opt,name=recommendEquipment,proto3" json:"recommendEquipment,omitempty"`
	Target               []int64           `protobuf:"varint,13,rep,packed,name=target,proto3" json:"target,omitempty"`
	WinExp               int64             `protobuf:"varint,14,opt,name=winExp,proto3" json:"winExp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PvpArena) Reset()         { *m = PvpArena{} }
func (m *PvpArena) String() string { return proto.CompactTextString(m) }
func (*PvpArena) ProtoMessage()    {}
func (*PvpArena) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{29}
}

func (m *PvpArena) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PvpArena.Unmarshal(m, b)
}
func (m *PvpArena) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PvpArena.Marshal(b, m, deterministic)
}
func (m *PvpArena) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PvpArena.Merge(m, src)
}
func (m *PvpArena) XXX_Size() int {
	return xxx_messageInfo_PvpArena.Size(m)
}
func (m *PvpArena) XXX_DiscardUnknown() {
	xxx_messageInfo_PvpArena.DiscardUnknown(m)
}

var xxx_messageInfo_PvpArena proto.InternalMessageInfo

func (m *PvpArena) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PvpArena) GetPriceType() string {
	if m != nil {
		return m.PriceType
	}
	return ""
}

func (m *PvpArena) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *PvpArena) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PvpArena) GetCup() int64 {
	if m != nil {
		return m.Cup
	}
	return 0
}

func (m *PvpArena) GetWin() int64 {
	if m != nil {
		return m.Win
	}
	return 0
}

func (m *PvpArena) GetLoss() int64 {
	if m != nil {
		return m.Loss
	}
	return 0
}

func (m *PvpArena) GetLock() bool {
	if m != nil {
		return m.Lock
	}
	return false
}

func (m *PvpArena) GetLockStar() int64 {
	if m != nil {
		return m.LockStar
	}
	return 0
}

func (m *PvpArena) GetLockCup() int64 {
	if m != nil {
		return m.LockCup
	}
	return 0
}

func (m *PvpArena) GetAchievement() []*PvpAchievement {
	if m != nil {
		return m.Achievement
	}
	return nil
}

func (m *PvpArena) GetRecommendEquipment() int64 {
	if m != nil {
		return m.RecommendEquipment
	}
	return 0
}

func (m *PvpArena) GetTarget() []int64 {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *PvpArena) GetWinExp() int64 {
	if m != nil {
		return m.WinExp
	}
	return 0
}

type GetPvpStatusReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPvpStatusReq) Reset()         { *m = GetPvpStatusReq{} }
func (m *GetPvpStatusReq) String() string { return proto.CompactTextString(m) }
func (*GetPvpStatusReq) ProtoMessage()    {}
func (*GetPvpStatusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{30}
}

func (m *GetPvpStatusReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPvpStatusReq.Unmarshal(m, b)
}
func (m *GetPvpStatusReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPvpStatusReq.Marshal(b, m, deterministic)
}
func (m *GetPvpStatusReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPvpStatusReq.Merge(m, src)
}
func (m *GetPvpStatusReq) XXX_Size() int {
	return xxx_messageInfo_GetPvpStatusReq.Size(m)
}
func (m *GetPvpStatusReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPvpStatusReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPvpStatusReq proto.InternalMessageInfo

func (m *GetPvpStatusReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetPvpStatusResp struct {
	Result               Result      `protobuf:"varint,1,opt,name=result,proto3,enum=Msg.Result" json:"result,omitempty"`
	Arena                []*PvpArena `protobuf:"bytes,2,rep,name=arena,proto3" json:"arena,omitempty"`
	MaxArena             int64       `protobuf:"varint,3,opt,name=maxArena,proto3" json:"maxArena,omitempty"`
	DoubleTime           int64       `protobuf:"varint,4,opt,name=doubleTime,proto3" json:"doubleTime,omitempty"`
	LockStar             int64       `protobuf:"varint,5,opt,name=lockStar,proto3" json:"lockStar,omitempty"`
	LockCup              int64       `protobuf:"varint,6,opt,name=lockCup,proto3" json:"lockCup,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetPvpStatusResp) Reset()         { *m = GetPvpStatusResp{} }
func (m *GetPvpStatusResp) String() string { return proto.CompactTextString(m) }
func (*GetPvpStatusResp) ProtoMessage()    {}
func (*GetPvpStatusResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{31}
}

func (m *GetPvpStatusResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPvpStatusResp.Unmarshal(m, b)
}
func (m *GetPvpStatusResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPvpStatusResp.Marshal(b, m, deterministic)
}
func (m *GetPvpStatusResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPvpStatusResp.Merge(m, src)
}
func (m *GetPvpStatusResp) XXX_Size() int {
	return xxx_messageInfo_GetPvpStatusResp.Size(m)
}
func (m *GetPvpStatusResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPvpStatusResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetPvpStatusResp proto.InternalMessageInfo

func (m *GetPvpStatusResp) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_INTERNAL
}

func (m *GetPvpStatusResp) GetArena() []*PvpArena {
	if m != nil {
		return m.Arena
	}
	return nil
}

func (m *GetPvpStatusResp) GetMaxArena() int64 {
	if m != nil {
		return m.MaxArena
	}
	return 0
}

func (m *GetPvpStatusResp) GetDoubleTime() int64 {
	if m != nil {
		return m.DoubleTime
	}
	return 0
}

func (m *GetPvpStatusResp) GetLockStar() int64 {
	if m != nil {
		return m.LockStar
	}
	return 0
}

func (m *GetPvpStatusResp) GetLockCup() int64 {
	if m != nil {
		return m.LockCup
	}
	return 0
}

type GetPvpPlayerBufferReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	RoomID               string   `protobuf:"bytes,2,opt,name=roomID,proto3" json:"roomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPvpPlayerBufferReq) Reset()         { *m = GetPvpPlayerBufferReq{} }
func (m *GetPvpPlayerBufferReq) String() string { return proto.CompactTextString(m) }
func (*GetPvpPlayerBufferReq) ProtoMessage()    {}
func (*GetPvpPlayerBufferReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{32}
}

func (m *GetPvpPlayerBufferReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPvpPlayerBufferReq.Unmarshal(m, b)
}
func (m *GetPvpPlayerBufferReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPvpPlayerBufferReq.Marshal(b, m, deterministic)
}
func (m *GetPvpPlayerBufferReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPvpPlayerBufferReq.Merge(m, src)
}
func (m *GetPvpPlayerBufferReq) XXX_Size() int {
	return xxx_messageInfo_GetPvpPlayerBufferReq.Size(m)
}
func (m *GetPvpPlayerBufferReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPvpPlayerBufferReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPvpPlayerBufferReq proto.InternalMessageInfo

func (m *GetPvpPlayerBufferReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *GetPvpPlayerBufferReq) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

type GetPvpPlayerBufferResp struct {
	Result               Result   `protobuf:"varint,1,opt,name=result,proto3,enum=Msg.Result" json:"result,omitempty"`
	MyBuffers            string   `protobuf:"bytes,2,opt,name=myBuffers,proto3" json:"myBuffers,omitempty"`
	OpponentBuffers      string   `protobuf:"bytes,3,opt,name=opponentBuffers,proto3" json:"opponentBuffers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPvpPlayerBufferResp) Reset()         { *m = GetPvpPlayerBufferResp{} }
func (m *GetPvpPlayerBufferResp) String() string { return proto.CompactTextString(m) }
func (*GetPvpPlayerBufferResp) ProtoMessage()    {}
func (*GetPvpPlayerBufferResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{33}
}

func (m *GetPvpPlayerBufferResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPvpPlayerBufferResp.Unmarshal(m, b)
}
func (m *GetPvpPlayerBufferResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPvpPlayerBufferResp.Marshal(b, m, deterministic)
}
func (m *GetPvpPlayerBufferResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPvpPlayerBufferResp.Merge(m, src)
}
func (m *GetPvpPlayerBufferResp) XXX_Size() int {
	return xxx_messageInfo_GetPvpPlayerBufferResp.Size(m)
}
func (m *GetPvpPlayerBufferResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPvpPlayerBufferResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetPvpPlayerBufferResp proto.InternalMessageInfo

func (m *GetPvpPlayerBufferResp) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_INTERNAL
}

func (m *GetPvpPlayerBufferResp) GetMyBuffers() string {
	if m != nil {
		return m.MyBuffers
	}
	return ""
}

func (m *GetPvpPlayerBufferResp) GetOpponentBuffers() string {
	if m != nil {
		return m.OpponentBuffers
	}
	return ""
}

type GetPvpSupplyReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPvpSupplyReq) Reset()         { *m = GetPvpSupplyReq{} }
func (m *GetPvpSupplyReq) String() string { return proto.CompactTextString(m) }
func (*GetPvpSupplyReq) ProtoMessage()    {}
func (*GetPvpSupplyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{34}
}

func (m *GetPvpSupplyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPvpSupplyReq.Unmarshal(m, b)
}
func (m *GetPvpSupplyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPvpSupplyReq.Marshal(b, m, deterministic)
}
func (m *GetPvpSupplyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPvpSupplyReq.Merge(m, src)
}
func (m *GetPvpSupplyReq) XXX_Size() int {
	return xxx_messageInfo_GetPvpSupplyReq.Size(m)
}
func (m *GetPvpSupplyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPvpSupplyReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPvpSupplyReq proto.InternalMessageInfo

func (m *GetPvpSupplyReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetPvpSupplyResp struct {
	Result               Result     `protobuf:"varint,1,opt,name=result,proto3,enum=Msg.Result" json:"result,omitempty"`
	Box                  []*BoxItem `protobuf:"bytes,2,rep,name=box,proto3" json:"box,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetPvpSupplyResp) Reset()         { *m = GetPvpSupplyResp{} }
func (m *GetPvpSupplyResp) String() string { return proto.CompactTextString(m) }
func (*GetPvpSupplyResp) ProtoMessage()    {}
func (*GetPvpSupplyResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e815925a12c5bb2d, []int{35}
}

func (m *GetPvpSupplyResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPvpSupplyResp.Unmarshal(m, b)
}
func (m *GetPvpSupplyResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPvpSupplyResp.Marshal(b, m, deterministic)
}
func (m *GetPvpSupplyResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPvpSupplyResp.Merge(m, src)
}
func (m *GetPvpSupplyResp) XXX_Size() int {
	return xxx_messageInfo_GetPvpSupplyResp.Size(m)
}
func (m *GetPvpSupplyResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPvpSupplyResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetPvpSupplyResp proto.InternalMessageInfo

func (m *GetPvpSupplyResp) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_INTERNAL
}

func (m *GetPvpSupplyResp) GetBox() []*BoxItem {
	if m != nil {
		return m.Box
	}
	return nil
}

func init() {
	proto.RegisterEnum("Msg.PlayType", PlayType_name, PlayType_value)
	proto.RegisterEnum("Msg.TargetType", TargetType_name, TargetType_value)
	proto.RegisterEnum("Msg.ShootTurn", ShootTurn_name, ShootTurn_value)
	proto.RegisterEnum("Msg.PvpShootResp_OppStatus", PvpShootResp_OppStatus_name, PvpShootResp_OppStatus_value)
	proto.RegisterEnum("Msg.PvpBattleReport_Winner", PvpBattleReport_Winner_name, PvpBattleReport_Winner_value)
	proto.RegisterEnum("Msg.PvpBattleStatus_Type", PvpBattleStatus_Type_name, PvpBattleStatus_Type_value)
	proto.RegisterType((*LastPvpReq)(nil), "Msg.LastPvpReq")
	proto.RegisterType((*LastPvpResp)(nil), "Msg.LastPvpResp")
	proto.RegisterType((*PvpBattle)(nil), "Msg.PvpBattle")
	proto.RegisterType((*PvpBattle_Limit)(nil), "Msg.PvpBattle.Limit")
	proto.RegisterType((*Shoot)(nil), "Msg.Shoot")
	proto.RegisterType((*PvpStartReq)(nil), "Msg.PvpStartReq")
	proto.RegisterType((*PvpStartResp)(nil), "Msg.PvpStartResp")
	proto.RegisterType((*PvpStopMatchReq)(nil), "Msg.PvpStopMatchReq")
	proto.RegisterType((*PvpStopMatchResp)(nil), "Msg.PvpStopMatchResp")
	proto.RegisterType((*PvpEnterRoomReq)(nil), "Msg.PvpEnterRoomReq")
	proto.RegisterType((*PvpEnterRoomResp)(nil), "Msg.PvpEnterRoomResp")
	proto.RegisterType((*PvpShootReq)(nil), "Msg.PvpShootReq")
	proto.RegisterType((*PvpShootResp)(nil), "Msg.PvpShootResp")
	proto.RegisterType((*PvpUsedTimeReq)(nil), "Msg.PvpUsedTimeReq")
	proto.RegisterType((*PvpUsedTimeResp)(nil), "Msg.PvpUsedTimeResp")
	proto.RegisterType((*PvpSurrenderReq)(nil), "Msg.PvpSurrenderReq")
	proto.RegisterType((*PvpSurrenderResp)(nil), "Msg.PvpSurrenderResp")
	proto.RegisterType((*PvpSnapshotInfo)(nil), "Msg.PvpSnapshotInfo")
	proto.RegisterType((*PvpOnMatched)(nil), "Msg.PvpOnMatched")
	proto.RegisterType((*PvpBattleReport)(nil), "Msg.PvpBattleReport")
	proto.RegisterType((*PvpBattleStatus)(nil), "Msg.PvpBattleStatus")
	proto.RegisterType((*Emotion)(nil), "Msg.Emotion")
	proto.RegisterType((*EmotionReq)(nil), "Msg.EmotionReq")
	proto.RegisterType((*EmotionResp)(nil), "Msg.EmotionResp")
	proto.RegisterType((*BattleStatusACK)(nil), "Msg.BattleStatusACK")
	proto.RegisterType((*QuitRoomReq)(nil), "Msg.QuitRoomReq")
	proto.RegisterType((*QuitRoomResp)(nil), "Msg.QuitRoomResp")
	proto.RegisterType((*GetRewardReq)(nil), "Msg.GetRewardReq")
	proto.RegisterType((*GetRewardResp)(nil), "Msg.GetRewardResp")
	proto.RegisterType((*PvpAchievement)(nil), "Msg.PvpAchievement")
	proto.RegisterType((*PvpArena)(nil), "Msg.PvpArena")
	proto.RegisterType((*GetPvpStatusReq)(nil), "Msg.GetPvpStatusReq")
	proto.RegisterType((*GetPvpStatusResp)(nil), "Msg.GetPvpStatusResp")
	proto.RegisterType((*GetPvpPlayerBufferReq)(nil), "Msg.GetPvpPlayerBufferReq")
	proto.RegisterType((*GetPvpPlayerBufferResp)(nil), "Msg.GetPvpPlayerBufferResp")
	proto.RegisterType((*GetPvpSupplyReq)(nil), "Msg.GetPvpSupplyReq")
	proto.RegisterType((*GetPvpSupplyResp)(nil), "Msg.GetPvpSupplyResp")
}

func init() { proto.RegisterFile("pvp.proto", fileDescriptor_e815925a12c5bb2d) }

var fileDescriptor_e815925a12c5bb2d = []byte{
	// 2129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0xcd, 0x6e, 0x1b, 0xc9,
	0xf1, 0x37, 0x67, 0x48, 0x8a, 0x2c, 0x7e, 0x78, 0xb6, 0xff, 0xfe, 0x1b, 0x8c, 0x77, 0x61, 0x28,
	0xb3, 0x8b, 0xac, 0x62, 0x2c, 0x68, 0x2f, 0x9d, 0x45, 0xb2, 0xd8, 0x4d, 0x02, 0x49, 0x56, 0x6c,
	0x21, 0xf6, 0xca, 0x69, 0xda, 0x31, 0xb0, 0x39, 0x0d, 0x87, 0x2d, 0x69, 0xe0, 0xe1, 0xf4, 0xec,
	0x4c, 0x0f, 0x2d, 0x21, 0xe7, 0x3c, 0x42, 0x90, 0x4b, 0x1e, 0x24, 0xf7, 0x1c, 0x72, 0x0b, 0x90,
	0x43, 0x1e, 0x20, 0xa7, 0xbc, 0x43, 0x80, 0x00, 0x41, 0x55, 0xf7, 0xcc, 0xf4, 0x48, 0xa2, 0x23,
	0x6f, 0x72, 0xc9, 0x89, 0x53, 0x1f, 0x5d, 0x5d, 0x5d, 0x55, 0x5d, 0xf5, 0x6b, 0x42, 0x3f, 0x5d,
	0xa7, 0xd3, 0x34, 0x93, 0x4a, 0x32, 0xf7, 0x59, 0x7e, 0x72, 0x67, 0x98, 0x89, 0xbc, 0x88, 0x95,
	0x66, 0xdd, 0x19, 0x2c, 0x82, 0x3c, 0x0a, 0x35, 0xe1, 0xff, 0x12, 0xe0, 0x69, 0x90, 0xab, 0xe7,
	0xeb, 0x94, 0x8b, 0x6f, 0xd8, 0x1d, 0xe8, 0xa5, 0x71, 0x70, 0x2e, 0xb2, 0xc3, 0x47, 0x93, 0xd6,
	0x76, 0x6b, 0xa7, 0xcf, 0x2b, 0x9a, 0xdd, 0x82, 0x8e, 0x92, 0xaf, 0x45, 0x32, 0x71, 0x48, 0xa0,
	0x09, 0x76, 0x1b, 0xba, 0x99, 0x94, 0xab, 0xc3, 0x47, 0x13, 0x97, 0xd8, 0x86, 0xf2, 0xff, 0xe0,
	0xc2, 0xa0, 0x32, 0x9c, 0xa7, 0xec, 0x43, 0xe8, 0x6a, 0x27, 0xc8, 0xee, 0x78, 0x36, 0x98, 0x3e,
	0xcb, 0x4f, 0xa6, 0x9c, 0x58, 0xdc, 0x88, 0x2c, 0x63, 0x8e, 0x6d, 0x8c, 0x4d, 0x61, 0x4b, 0xbb,
	0xf1, 0x29, 0xed, 0x32, 0x98, 0xdd, 0xa2, 0xd5, 0xcf, 0x89, 0xb7, 0xab, 0x54, 0x16, 0x2d, 0x0a,
	0x25, 0x78, 0xa9, 0x54, 0xeb, 0xcf, 0x26, 0xed, 0x7f, 0xaf, 0x3f, 0x63, 0xdb, 0xe0, 0xa6, 0xeb,
	0x74, 0xd2, 0x21, 0xdd, 0xb1, 0xd6, 0x5d, 0xa7, 0x7b, 0x81, 0x52, 0xb1, 0xe0, 0x28, 0x62, 0xdf,
	0x83, 0x31, 0x9e, 0x66, 0x7e, 0x2a, 0xa5, 0x3a, 0x4c, 0x96, 0xe2, 0x6c, 0xb2, 0xb5, 0xdd, 0xda,
	0x71, 0xf9, 0x05, 0x2e, 0xfb, 0x04, 0xde, 0x8b, 0xf2, 0x79, 0x12, 0xa4, 0xf9, 0xa9, 0x54, 0xcf,
	0x02, 0x15, 0x9e, 0x8a, 0xe5, 0x04, 0xb6, 0x5b, 0x3b, 0x3d, 0x7e, 0x59, 0xc0, 0x3e, 0xc0, 0x4c,
	0x1d, 0x73, 0x7d, 0xe4, 0x01, 0x1d, 0xb9, 0x66, 0xb0, 0x1f, 0xc1, 0x30, 0x37, 0x0b, 0x0e, 0x93,
	0x63, 0x39, 0x19, 0xda, 0x47, 0x59, 0xa7, 0x73, 0x4b, 0xc6, 0x1b, 0x9a, 0xec, 0x4b, 0x18, 0x4b,
	0x65, 0xcb, 0x27, 0xa3, 0xb7, 0xac, 0xbd, 0xa0, 0xeb, 0xff, 0xa5, 0x05, 0xfd, 0xea, 0xf8, 0xec,
	0xbb, 0xd0, 0x56, 0xe7, 0xa9, 0x30, 0x69, 0x1b, 0x55, 0x81, 0x7c, 0x71, 0x9e, 0x0a, 0x4e, 0x22,
	0x76, 0x0f, 0x3a, 0x71, 0xb4, 0x8a, 0x14, 0x65, 0xcd, 0xda, 0x45, 0x5b, 0x98, 0x3e, 0x45, 0x19,
	0xd7, 0x2a, 0x6c, 0x02, 0x5b, 0xb9, 0x0a, 0x4e, 0x44, 0x55, 0x30, 0x25, 0xc9, 0x18, 0xb4, 0xb3,
	0x20, 0x59, 0x4e, 0xda, 0xdb, 0xee, 0x8e, 0xcb, 0xe9, 0xfb, 0xce, 0x63, 0xe8, 0xd0, 0x6a, 0x2c,
	0xbe, 0x4c, 0x16, 0xc9, 0x92, 0xdc, 0x70, 0xb9, 0x26, 0x70, 0x89, 0x8a, 0x56, 0x82, 0xf6, 0x75,
	0x39, 0x7d, 0xa3, 0x66, 0x1e, 0xca, 0x4c, 0x4c, 0x5c, 0xb2, 0xa3, 0x09, 0xff, 0xef, 0x0e, 0x74,
	0x28, 0x4d, 0x28, 0x8f, 0x28, 0x81, 0xc6, 0x12, 0x11, 0xf5, 0x2a, 0x34, 0xe5, 0x98, 0x55, 0x6c,
	0x1b, 0x06, 0x51, 0x8e, 0x19, 0xfe, 0x59, 0x16, 0xac, 0x04, 0xd5, 0x52, 0x8f, 0xdb, 0x2c, 0xf4,
	0x60, 0x19, 0xa8, 0xc0, 0x9c, 0x85, 0xbe, 0xd9, 0x0f, 0x00, 0x42, 0x19, 0xc7, 0x22, 0x54, 0x91,
	0x4c, 0x4c, 0x51, 0xe9, 0x98, 0x90, 0x07, 0xfb, 0x95, 0x8c, 0x5b, 0x7a, 0xec, 0x2e, 0x40, 0x94,
	0x1f, 0xad, 0x45, 0xf6, 0x02, 0x4f, 0xd4, 0xa5, 0xad, 0x2c, 0x0e, 0xd6, 0x8a, 0x58, 0x49, 0x54,
	0x3d, 0x7c, 0x44, 0xc5, 0xd7, 0xe1, 0x35, 0x83, 0xdd, 0x03, 0x2f, 0xca, 0x8f, 0x52, 0x91, 0xcc,
	0x43, 0x99, 0x0a, 0xed, 0x6e, 0x8f, 0x6c, 0x5c, 0xe2, 0xe3, 0x25, 0x2f, 0x72, 0xb1, 0xa4, 0x7d,
	0xfa, 0x14, 0x84, 0x8a, 0x66, 0x3e, 0x0c, 0xd3, 0x22, 0x89, 0x54, 0xb4, 0x16, 0x24, 0x07, 0x92,
	0x37, 0x78, 0xe8, 0xc9, 0x31, 0x1a, 0xe2, 0x81, 0x12, 0x54, 0xb5, 0x1d, 0x5e, 0x33, 0xfc, 0xcf,
	0x61, 0x80, 0x05, 0xa6, 0x82, 0x4c, 0x61, 0x47, 0xa9, 0xba, 0x46, 0xcb, 0xee, 0x1a, 0xb7, 0xa0,
	0x13, 0x64, 0x22, 0x09, 0x4c, 0xe6, 0x34, 0xe1, 0x3f, 0x84, 0x61, 0xbd, 0xf4, 0x9a, 0x3d, 0xc3,
	0xff, 0x18, 0x6e, 0xd2, 0x22, 0x99, 0xd2, 0xad, 0xda, 0xb8, 0xa7, 0xff, 0x43, 0xf0, 0x9a, 0x8a,
	0xd7, 0xdd, 0xe1, 0x57, 0xb4, 0xc3, 0x41, 0xa2, 0x44, 0x86, 0x37, 0x73, 0xf3, 0xa9, 0xec, 0xee,
	0xe9, 0x5c, 0xe8, 0x9e, 0xb7, 0xa1, 0xcb, 0x1b, 0x7d, 0x52, 0x53, 0xfe, 0x4b, 0xf2, 0xca, 0x32,
	0x7e, 0xdd, 0x5e, 0xf9, 0x01, 0xf4, 0xb1, 0xde, 0xe7, 0x2a, 0x58, 0xa5, 0x26, 0x8c, 0x35, 0xc3,
	0xff, 0x6d, 0x4b, 0xa7, 0x01, 0x0b, 0x0e, 0x1d, 0xae, 0x3b, 0x6b, 0xab, 0xd1, 0x59, 0xdf, 0xe6,
	0x72, 0x75, 0x48, 0xd7, 0x3e, 0xa4, 0x0f, 0xdd, 0x1c, 0xad, 0xe6, 0x74, 0x51, 0x07, 0x33, 0xa8,
	0x2b, 0x9b, 0x1b, 0x09, 0x5e, 0x72, 0x55, 0x64, 0xc9, 0x57, 0xc5, 0x8a, 0xca, 0xbf, 0xc3, 0x4b,
	0xd2, 0xff, 0x63, 0x4b, 0xe7, 0x58, 0xfb, 0x75, 0xdd, 0xb3, 0xde, 0x81, 0x5e, 0x26, 0x42, 0xdd,
	0x77, 0xf5, 0x51, 0x2b, 0x9a, 0x7d, 0x01, 0x20, 0xd3, 0x54, 0xce, 0x55, 0xa0, 0x8a, 0x9c, 0x5c,
	0x1d, 0xcf, 0xde, 0xaf, 0xfa, 0x5c, 0xb9, 0xcf, 0xf4, 0x28, 0x4d, 0xb5, 0x0a, 0xb7, 0xd4, 0xfd,
	0xcf, 0xa0, 0x5f, 0x09, 0x18, 0x40, 0x57, 0x26, 0x71, 0x94, 0x08, 0xef, 0x06, 0x1b, 0x41, 0x3f,
	0x13, 0xa1, 0x4c, 0x12, 0x11, 0x2a, 0xaf, 0x85, 0x64, 0x5e, 0x64, 0x99, 0x48, 0x96, 0x22, 0xf3,
	0x1c, 0xff, 0x27, 0x30, 0x7e, 0xbe, 0x4e, 0x5f, 0x9a, 0x4b, 0xf3, 0xb6, 0xf8, 0x5e, 0x19, 0x43,
	0x9f, 0x53, 0x45, 0xd5, 0xeb, 0xdf, 0x21, 0x0e, 0xd5, 0xcd, 0x75, 0x9a, 0x37, 0xd7, 0x54, 0xe9,
	0xbc, 0xf4, 0xd2, 0x38, 0xc5, 0x1b, 0x4e, 0xf1, 0x6f, 0x99, 0xf4, 0xf2, 0xee, 0xd4, 0xc6, 0xaf,
	0x7b, 0x77, 0x7e, 0xad, 0xbd, 0xb2, 0x87, 0x93, 0x35, 0x01, 0x5a, 0xcd, 0x09, 0xf0, 0x36, 0xbf,
	0xca, 0x56, 0xef, 0x5a, 0xad, 0xfe, 0x2e, 0x00, 0xf5, 0x69, 0x1e, 0x24, 0x27, 0xba, 0x3b, 0xf7,
	0xb9, 0xc5, 0xf1, 0x7f, 0xef, 0x52, 0xb1, 0x1d, 0x25, 0xe5, 0xbc, 0xfd, 0x1f, 0x07, 0x21, 0x57,
	0x82, 0x8b, 0xee, 0x26, 0x70, 0xf1, 0x31, 0x74, 0x55, 0x90, 0x9d, 0x08, 0x45, 0xd3, 0x62, 0x3c,
	0xbb, 0x49, 0x26, 0x5f, 0x10, 0x8b, 0x86, 0xb7, 0x11, 0x5f, 0xc2, 0x19, 0xbd, 0xff, 0x00, 0x67,
	0xf4, 0xdf, 0x01, 0x67, 0xfc, 0xce, 0xa1, 0xe2, 0x30, 0x27, 0x14, 0xa9, 0xcc, 0x14, 0x7b, 0x08,
	0xdd, 0x37, 0x51, 0x92, 0x88, 0xcc, 0x64, 0xe8, 0xfd, 0x0b, 0x71, 0x20, 0xad, 0xe9, 0x2b, 0x52,
	0xe1, 0x46, 0x15, 0xc7, 0xb4, 0x09, 0xfa, 0x7e, 0x91, 0xe6, 0x13, 0x87, 0x06, 0xbf, 0xcd, 0xaa,
	0x35, 0x66, 0xa4, 0xe1, 0xda, 0x1a, 0xc4, 0xc2, 0xd8, 0x9a, 0x05, 0x1c, 0xa1, 0xc5, 0x9c, 0xc0,
	0x00, 0x76, 0x38, 0x87, 0x5f, 0x16, 0xd4, 0xda, 0x33, 0x4b, 0xbb, 0x63, 0x6b, 0x5b, 0x02, 0xff,
	0x3e, 0x74, 0xb5, 0xc7, 0x6c, 0x00, 0x5b, 0x52, 0x57, 0xa3, 0x77, 0x03, 0x09, 0x63, 0xd9, 0x6b,
	0xd5, 0xc4, 0xcc, 0x73, 0xfc, 0x3f, 0x75, 0xac, 0xc8, 0x98, 0xee, 0x74, 0xad, 0xda, 0xad, 0xc0,
	0x8d, 0x63, 0x83, 0x9b, 0x03, 0xf0, 0x16, 0x96, 0x29, 0x4c, 0xbe, 0x69, 0x94, 0xdf, 0x69, 0x86,
	0x57, 0xcb, 0xa7, 0x54, 0x1d, 0x97, 0x96, 0x30, 0x1f, 0xda, 0xd8, 0xc6, 0xa9, 0x9a, 0xc7, 0xa6,
	0x42, 0xa9, 0xc1, 0xbe, 0x28, 0xb2, 0x84, 0x93, 0xcc, 0x9a, 0x0e, 0x9d, 0x8d, 0xd3, 0xe1, 0x13,
	0x3c, 0x09, 0xe6, 0x91, 0x6a, 0xf7, 0x12, 0x5e, 0xd4, 0x39, 0xe6, 0x46, 0x87, 0xed, 0xc0, 0xcd,
	0xb2, 0xe6, 0x8e, 0x94, 0x0e, 0x74, 0x8f, 0x30, 0xda, 0x45, 0x36, 0x9b, 0xc2, 0x10, 0x7b, 0xf6,
	0x5a, 0x64, 0xb4, 0x9f, 0xa9, 0x45, 0xdb, 0x83, 0x86, 0x9c, 0xcd, 0x60, 0xa4, 0x43, 0x7e, 0xa0,
	0x61, 0x14, 0x81, 0x9d, 0xc1, 0x6c, 0x48, 0x0b, 0x0c, 0x8f, 0x37, 0x55, 0xec, 0xc9, 0x36, 0x68,
	0x4c, 0x36, 0x8d, 0xdf, 0x1e, 0x07, 0x2b, 0x81, 0x88, 0x8d, 0xb0, 0x3a, 0xe1, 0xb7, 0x92, 0x83,
	0xf3, 0x5a, 0x96, 0xa3, 0x86, 0xe0, 0x78, 0x87, 0xd7, 0x0c, 0xff, 0xaf, 0x2d, 0x68, 0x53, 0x90,
	0xfb, 0xd0, 0xa1, 0x30, 0x79, 0x37, 0xd8, 0x18, 0x00, 0x8d, 0xef, 0x9f, 0x62, 0x33, 0xd3, 0x43,
	0x88, 0x60, 0x2f, 0x9a, 0xf3, 0x1c, 0xd6, 0x05, 0x47, 0x2a, 0xcf, 0x45, 0x35, 0x99, 0xa6, 0x47,
	0xc7, 0xc7, 0x4f, 0x71, 0x74, 0xb5, 0xd9, 0x10, 0x7a, 0x27, 0x66, 0x53, 0xaf, 0xd3, 0x9c, 0x5c,
	0x5d, 0x14, 0xe6, 0x4a, 0xa6, 0xe8, 0x95, 0xb7, 0x45, 0x42, 0x44, 0x5b, 0x44, 0xf6, 0x18, 0x83,
	0x71, 0x18, 0x47, 0x22, 0x51, 0xbb, 0x8b, 0x44, 0x66, 0xab, 0x20, 0xf6, 0xfa, 0xec, 0x26, 0x0c,
	0xd0, 0x1a, 0x8e, 0x18, 0x59, 0x28, 0x0f, 0x9a, 0x93, 0x71, 0x80, 0x75, 0x6b, 0x50, 0xa8, 0x37,
	0x64, 0x1e, 0x0c, 0x65, 0x9a, 0xf2, 0x4a, 0x3c, 0xf2, 0x3f, 0x87, 0xad, 0x32, 0x74, 0x63, 0x70,
	0xaa, 0x96, 0xef, 0x1c, 0x3e, 0xc2, 0x80, 0x1d, 0x67, 0x72, 0xa5, 0xfb, 0x21, 0x15, 0x6c, 0x87,
	0x5b, 0x1c, 0x5f, 0x01, 0x94, 0x49, 0xf8, 0xb6, 0x88, 0xeb, 0xaa, 0x97, 0x69, 0x13, 0x48, 0xeb,
	0xa1, 0x51, 0x33, 0xfc, 0x11, 0x0c, 0xaa, 0x5d, 0xf3, 0x14, 0xa7, 0xaa, 0x7d, 0x35, 0x76, 0xf7,
	0x7f, 0xbe, 0xc1, 0x93, 0x4d, 0x53, 0xc3, 0x86, 0x2e, 0x6e, 0x13, 0xba, 0xf8, 0xaf, 0x60, 0xf0,
	0x8b, 0x22, 0x52, 0x25, 0xa8, 0xfc, 0xef, 0x3d, 0xbe, 0x1f, 0xc2, 0xb0, 0x36, 0x7c, 0xdd, 0x51,
	0xfd, 0x11, 0x0c, 0x1f, 0x0b, 0xc5, 0xc5, 0x9b, 0x20, 0x5b, 0x6e, 0x46, 0xd1, 0xff, 0x70, 0x60,
	0x64, 0xa9, 0xbd, 0x03, 0x5a, 0x0d, 0x8b, 0x54, 0x97, 0x72, 0x89, 0x56, 0x2b, 0x06, 0x9e, 0x43,
	0xc6, 0xcb, 0xfd, 0x22, 0x35, 0x21, 0x32, 0x14, 0xf2, 0x13, 0xf1, 0x06, 0xf9, 0x6d, 0xcd, 0xd7,
	0x14, 0xbe, 0xc6, 0x11, 0xc4, 0x25, 0x22, 0x51, 0xc6, 0x64, 0x47, 0xbf, 0xc6, 0x9b, 0x5c, 0x6c,
	0xfb, 0x15, 0xa7, 0x48, 0xa9, 0xdd, 0xb8, 0xdc, 0x66, 0xd9, 0x96, 0xbe, 0xd2, 0x3b, 0x6d, 0x35,
	0x2d, 0x69, 0x2e, 0x06, 0x23, 0xcd, 0xa2, 0x50, 0xf7, 0x1e, 0x97, 0x6b, 0x82, 0xdd, 0x05, 0x77,
	0x21, 0xcf, 0x26, 0x7d, 0x6a, 0x75, 0xba, 0x6f, 0xec, 0xc9, 0xb3, 0x43, 0x25, 0x56, 0x1c, 0x05,
	0xec, 0x23, 0x18, 0xe1, 0x88, 0x8a, 0x92, 0x93, 0xb9, 0xca, 0x44, 0xf0, 0xda, 0x3c, 0xa7, 0x9a,
	0x4c, 0xb6, 0x03, 0x3d, 0x71, 0xa6, 0xb2, 0x60, 0x4f, 0x9e, 0x4d, 0x06, 0x57, 0x98, 0xaa, 0xa4,
	0x7e, 0x46, 0xb8, 0x73, 0x37, 0x3c, 0x8d, 0xc4, 0x5a, 0xac, 0x44, 0x42, 0x0d, 0x3f, 0x16, 0x6b,
	0x11, 0x97, 0xaf, 0x59, 0x22, 0x98, 0x07, 0x6e, 0x58, 0x94, 0xaf, 0x02, 0xfc, 0x2c, 0x3d, 0x75,
	0xad, 0x0e, 0xd7, 0xf0, 0x74, 0x02, 0x5b, 0x99, 0x08, 0x45, 0xb4, 0x16, 0x26, 0xd4, 0x25, 0xe9,
	0xff, 0xd3, 0x81, 0x1e, 0x6e, 0x8a, 0x2f, 0x34, 0xbc, 0xc3, 0x51, 0xf9, 0x06, 0x77, 0x22, 0xfd,
	0x07, 0x06, 0x46, 0x82, 0x46, 0x0a, 0x98, 0x3f, 0x30, 0x4a, 0x46, 0x1d, 0x34, 0xc7, 0x0e, 0xda,
	0xad, 0xf2, 0xdf, 0x02, 0xd7, 0xb8, 0x4c, 0x0f, 0x7c, 0xe3, 0x72, 0xbb, 0x76, 0xd9, 0x03, 0xf7,
	0x4d, 0x94, 0x98, 0xcc, 0xe2, 0x27, 0x62, 0xc0, 0x58, 0xe6, 0xb9, 0xc9, 0x23, 0x7d, 0x6b, 0x5e,
	0xf8, 0x9a, 0xd2, 0xd6, 0xe3, 0xf4, 0x8d, 0x17, 0x09, 0x7f, 0xf1, 0x21, 0x69, 0xf2, 0x55, 0xd1,
	0x78, 0x50, 0xfc, 0xc6, 0x4c, 0xeb, 0xb7, 0x6f, 0x49, 0xb2, 0xcf, 0x60, 0x10, 0xd4, 0x91, 0x35,
	0x99, 0xf8, 0xbf, 0x72, 0x36, 0x59, 0x41, 0xe7, 0xb6, 0x1e, 0x9b, 0x02, 0xc3, 0x7e, 0xb8, 0x5a,
	0x89, 0x64, 0x79, 0xf0, 0x4d, 0x11, 0xa5, 0xb4, 0x7a, 0x48, 0xb6, 0xaf, 0x90, 0x60, 0x4d, 0x1b,
	0x58, 0x36, 0x22, 0x14, 0x52, 0xa2, 0xb0, 0xdb, 0x84, 0x7c, 0x0e, 0xce, 0xd2, 0xc9, 0x58, 0xd7,
	0xba, 0xa6, 0xf0, 0x7d, 0xfb, 0x58, 0x28, 0xfd, 0x2e, 0xc6, 0xe7, 0xcb, 0xc6, 0x9b, 0xf9, 0xe7,
	0x16, 0x78, 0x4d, 0xcd, 0xeb, 0x5e, 0xce, 0x0f, 0xeb, 0xd7, 0x38, 0x9e, 0x79, 0x54, 0x9d, 0x19,
	0x99, 0xe6, 0x71, 0x8e, 0x41, 0x5d, 0x05, 0x67, 0xc4, 0x2a, 0x1b, 0x59, 0x49, 0x63, 0x2b, 0x5f,
	0xca, 0x62, 0x11, 0xeb, 0xff, 0x0c, 0x74, 0x0e, 0x2d, 0x4e, 0x23, 0x21, 0x9d, 0xcd, 0x09, 0xe9,
	0x36, 0x12, 0xe2, 0x1f, 0xc0, 0xff, 0xeb, 0xf3, 0xe8, 0x81, 0xb0, 0x57, 0x1c, 0x1f, 0xeb, 0x77,
	0xcd, 0x3b, 0x75, 0x60, 0xff, 0x37, 0x2d, 0xb8, 0x7d, 0x95, 0x9d, 0x77, 0x68, 0x5d, 0xab, 0x73,
	0xbd, 0x28, 0x37, 0xa6, 0x6b, 0x06, 0xc2, 0x93, 0xb2, 0x55, 0x94, 0x3a, 0xba, 0x17, 0x5f, 0x64,
	0x5b, 0x89, 0x2c, 0xd2, 0x34, 0x3e, 0xdf, 0x9c, 0xc8, 0x57, 0x55, 0x1e, 0x8d, 0xe2, 0x75, 0x3d,
	0x35, 0x97, 0xdc, 0xd9, 0xd0, 0x8e, 0xee, 0x7d, 0x1f, 0x7a, 0xe5, 0x3f, 0x77, 0xac, 0x07, 0x6d,
	0x4c, 0x8d, 0x77, 0x03, 0x11, 0x07, 0x61, 0x55, 0xaf, 0x85, 0x4c, 0x1e, 0x84, 0xc2, 0x6b, 0xdf,
	0xfb, 0x5b, 0x0b, 0xa0, 0x7e, 0x2a, 0x20, 0x6c, 0x98, 0xab, 0x20, 0x59, 0x06, 0xd9, 0x52, 0x03,
	0xd7, 0x97, 0x49, 0x14, 0xca, 0x2c, 0xf1, 0x5a, 0xf8, 0x6a, 0xde, 0x4d, 0x22, 0x04, 0x0b, 0x0e,
	0x7e, 0x3f, 0x91, 0x31, 0x22, 0x0d, 0x17, 0x81, 0xc3, 0xbe, 0x5c, 0xa5, 0x42, 0xd1, 0x1f, 0x47,
	0x5e, 0x1b, 0x85, 0x73, 0x21, 0xf2, 0xe0, 0x8d, 0xd7, 0xc1, 0x3d, 0x9f, 0x14, 0xab, 0x20, 0xf1,
	0xba, 0x68, 0xec, 0x89, 0xa4, 0x17, 0xa0, 0xb7, 0x85, 0xfb, 0xec, 0x05, 0x8b, 0xf3, 0x47, 0x32,
	0x8e, 0xbd, 0x1e, 0x52, 0xfb, 0x99, 0xcc, 0xf3, 0x45, 0x90, 0x79, 0x7d, 0x54, 0x9c, 0x07, 0x45,
	0x8e, 0x8a, 0x80, 0xa2, 0xdd, 0x28, 0x0b, 0xb3, 0xe0, 0x18, 0x41, 0x88, 0x07, 0xc3, 0xa7, 0x11,
	0x4e, 0xe9, 0xaf, 0xe5, 0x6a, 0x11, 0x09, 0x6f, 0x88, 0xbb, 0x3f, 0x8e, 0x82, 0x44, 0x19, 0xc6,
	0x88, 0xbd, 0x07, 0xa3, 0xbd, 0x20, 0x8e, 0xa5, 0x4c, 0x0c, 0x6b, 0x7c, 0xef, 0x4b, 0xe8, 0x57,
	0xf0, 0x15, 0x8f, 0xbe, 0x90, 0xea, 0xad, 0xb0, 0x1c, 0x89, 0x44, 0x44, 0xea, 0x14, 0xcf, 0xb7,
	0xf7, 0xd3, 0xaf, 0x7f, 0x7c, 0x5a, 0x2c, 0x1e, 0x3c, 0x78, 0x30, 0x3d, 0x8b, 0x92, 0xa5, 0x4c,
	0x4e, 0xa6, 0xa1, 0x5c, 0xdd, 0x37, 0x1e, 0x92, 0xdd, 0xfb, 0x08, 0xab, 0xe6, 0x22, 0x5b, 0x8b,
	0xec, 0x3e, 0xfd, 0xd9, 0x1e, 0xca, 0xf8, 0xfe, 0xfa, 0xd3, 0x2f, 0x10, 0x4f, 0xa5, 0x8b, 0x45,
	0x97, 0x78, 0x0f, 0xff, 0x15, 0x00, 0x00, 0xff, 0xff, 0x6e, 0xec, 0xc2, 0x47, 0xad, 0x17, 0x00,
	0x00,
}
