// Code generated by protoc-gen-go. DO NOT EDIT.
// source: share.proto

package gamepb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ShareReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShareReq) Reset()         { *m = ShareReq{} }
func (m *ShareReq) String() string { return proto.CompactTextString(m) }
func (*ShareReq) ProtoMessage()    {}
func (*ShareReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd0836ea8f2388e7, []int{0}
}

func (m *ShareReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareReq.Unmarshal(m, b)
}
func (m *ShareReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareReq.Marshal(b, m, deterministic)
}
func (m *ShareReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareReq.Merge(m, src)
}
func (m *ShareReq) XXX_Size() int {
	return xxx_messageInfo_ShareReq.Size(m)
}
func (m *ShareReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareReq.DiscardUnknown(m)
}

var xxx_messageInfo_ShareReq proto.InternalMessageInfo

func (m *ShareReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ShareResp struct {
	Result               Result   `protobuf:"varint,1,opt,name=result,proto3,enum=Msg.Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShareResp) Reset()         { *m = ShareResp{} }
func (m *ShareResp) String() string { return proto.CompactTextString(m) }
func (*ShareResp) ProtoMessage()    {}
func (*ShareResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd0836ea8f2388e7, []int{1}
}

func (m *ShareResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareResp.Unmarshal(m, b)
}
func (m *ShareResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareResp.Marshal(b, m, deterministic)
}
func (m *ShareResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareResp.Merge(m, src)
}
func (m *ShareResp) XXX_Size() int {
	return xxx_messageInfo_ShareResp.Size(m)
}
func (m *ShareResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareResp.DiscardUnknown(m)
}

var xxx_messageInfo_ShareResp proto.InternalMessageInfo

func (m *ShareResp) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_INTERNAL
}

func init() {
	proto.RegisterType((*ShareReq)(nil), "Msg.ShareReq")
	proto.RegisterType((*ShareResp)(nil), "Msg.ShareResp")
}

func init() { proto.RegisterFile("share.proto", fileDescriptor_cd0836ea8f2388e7) }

var fileDescriptor_cd0836ea8f2388e7 = []byte{
	// 176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x8e, 0x31, 0x0f, 0x82, 0x30,
	0x14, 0x84, 0x43, 0x8c, 0x44, 0x8a, 0x71, 0x20, 0x0e, 0xc6, 0x89, 0xe0, 0xe2, 0xd4, 0x56, 0x1d,
	0x8d, 0x31, 0x71, 0x71, 0x62, 0x69, 0x37, 0xb7, 0x82, 0x2f, 0xc5, 0x08, 0x3c, 0x6c, 0x0b, 0xf1,
	0xe7, 0x1b, 0x0b, 0xe3, 0x7d, 0xf7, 0x5d, 0x72, 0x24, 0xb6, 0x95, 0x32, 0x40, 0x3b, 0x83, 0x0e,
	0x93, 0x59, 0x6e, 0xf5, 0x76, 0x69, 0xc0, 0xf6, 0xb5, 0x1b, 0x51, 0x96, 0x92, 0x85, 0xfc, 0x1b,
	0x02, 0x3e, 0xc9, 0x9a, 0xcc, 0x1d, 0xbe, 0xa1, 0xdd, 0x04, 0x69, 0xb0, 0x8f, 0xc4, 0x18, 0x32,
	0x4e, 0xa2, 0xc9, 0xb0, 0x5d, 0xb2, 0x23, 0xe1, 0x38, 0xf7, 0xce, 0xea, 0x18, 0xd3, 0xdc, 0x6a,
	0x2a, 0x3c, 0x12, 0x53, 0x75, 0xbb, 0x3e, 0x2e, 0x55, 0x5f, 0x70, 0xce, 0xe9, 0xf7, 0xd5, 0x3e,
	0xb1, 0xd5, 0xb4, 0xc4, 0x86, 0x49, 0xd5, 0x5b, 0xa5, 0x41, 0x56, 0x88, 0x8e, 0xdd, 0x55, 0x03,
	0x12, 0xcc, 0x00, 0x86, 0xf9, 0x1f, 0x25, 0xd6, 0x6c, 0x38, 0x9c, 0xb5, 0x6a, 0xa0, 0x2b, 0x8a,
	0xd0, 0xb3, 0xd3, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x82, 0xae, 0x79, 0x09, 0xbd, 0x00, 0x00, 0x00,
}
